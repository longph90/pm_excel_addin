{"version":3,"file":"project_task.bundle.js","mappings":"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","sources":["webpack://office-addin-taskpane-js/./src/project_task/project_task.js"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global console, document, Excel, Office */\nOffice.onReady((info) => {\n  if (info.host === Office.HostType.Excel) {\n    /* empty */\n    loadAndActivateSheet(\"WBS\");\n\n    document.getElementById(\"btnNewTaskForm\").onclick = function () {\n      showForm(\"newTaskForm\");\n    };\n\n    document.getElementById(\"btnEditTaskForm\").onclick = function () {\n      showForm(\"editTaskForm\");\n    };\n\n    document.getElementById(\"btnUpdateProgressForm\").onclick = function () {\n      showForm(\"updateProgressForm\");\n    };\n\n    document.getElementById(\"editTaskInput\").onblur = function () {\n      const taskID = this.value;\n      loadTaskDetails(taskID, \"editForm\");\n    };\n\n    document.getElementById(\"progressTaskID\").onblur = function () {\n      const taskID = this.value;\n      loadTaskDetails(taskID, \"progressForm\");\n    };\n\n    /* Handle when click button */\n    document.getElementById(\"btnAddTask\").onclick = addTaskToWbs;\n    document.getElementById(\"updateTask\").onclick = function () {\n      const taskID = document.querySelector(\"#editForm #editTaskInput\").value;\n      updateTaskDetails(taskID, \"editForm\");\n    };\n    document.getElementById(\"btnUpdateProgress\").onclick = function () {\n      const taskID = document.querySelector(\"#progressForm #progressTaskID\").value;\n      updateTaskDetails(taskID, \"progressForm\");\n    };\n    /* Handle when click button */\n  }\n});\n\nfunction addTaskToWbs() {\n  const form = document.getElementById(\"taskForm\");\n  if (!form.checkValidity()) {\n    // If the form is invalid, show validation messages\n    form.reportValidity();\n    return; // Prevent further execution\n  }\n  Excel.run(function (context) {\n    const sheet = context.workbook.worksheets.getItem(\"WBS\");\n    const table = sheet.tables.getItem(\"TblWbs\");\n    const taskID = document.getElementById(\"taskID\").value;\n    const taskName = document.getElementById(\"taskName\").value;\n    const type = document.getElementById(\"type\").value;\n    const pic = document.getElementById(\"pic\").value;\n    const reviewer = document.getElementById(\"reviewer\").value;\n    const pStartDate = document.getElementById(\"pStartDate\").value;\n    const pEndDate = document.getElementById(\"pEndDate\").value;\n    const pReleaseDate = document.getElementById(\"pReleaseDate\").value;\n    const pEffort = document.getElementById(\"pEffort\").value;\n    const aStartDate = document.getElementById(\"aStartDate\").value;\n    const aEndDate = document.getElementById(\"aEndDate\").value;\n    const aEffort = document.getElementById(\"aEffort\").value;\n    const percentACompleted = document.getElementById(\"percentACompleted\").value;\n    const aReleaseDate = document.getElementById(\"aReleaseDate\").value;\n    const parentID = document.getElementById(\"parentID\").value;\n    const linkBackLog = document.getElementById(\"linkBackLog\").value;\n    const linkJira = document.getElementById(\"linkJira\").value;\n    const linkEvidence = document.getElementById(\"linkEvidence\").value;\n\n    // Thêm hàng mới vào bảng\n    table.rows.add(null, [\n      [\n        taskID,\n        taskName,\n        type,\n        pic,\n        reviewer,\n        pStartDate,\n        pEndDate,\n        pReleaseDate,\n        pEffort,\n        aStartDate,\n        aEndDate,\n        aEffort,\n        percentACompleted,\n        aReleaseDate,\n        parentID,\n        linkBackLog,\n        linkJira,\n        linkEvidence,\n      ],\n    ]);\n\n    return context.sync().then(() => {\n      showNotification(\"Task added successfully!\", \"success\");\n    });\n  }).catch(function (error) {\n    console.log(error);\n    showNotification(`Error: ${error.message}`, \"danger\");\n  });\n}\n\nfunction showNotification(message, type) {\n  const notificationEl = document.getElementById(\"notification\");\n  notificationEl.textContent = message;\n  notificationEl.className = `alert alert-${type} position-fixed bottom-0 start-50 translate-middle-x mb-3`;\n  notificationEl.classList.remove(\"d-none\");\n\n  // Ẩn thông báo sau 3 giây\n  // eslint-disable-next-line no-undef\n  setTimeout(() => {\n    notificationEl.classList.add(\"d-none\");\n  }, 3000);\n}\n\nfunction loadAndActivateSheet(sheetName) {\n  Excel.run(function (context) {\n    const sheet = context.workbook.worksheets.getItem(sheetName);\n    sheet.activate(); // Kích hoạt sheet\n    return context.sync();\n  }).catch(function (error) {\n    console.log(error);\n    // eslint-disable-next-line no-undef\n    if (error instanceof OfficeExtension.Error) {\n      console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n  });\n}\n\nfunction showForm(formId) {\n  try {\n    // Ẩn tất cả các form\n    const forms = document.querySelectorAll(\".form-section\");\n    forms.forEach((form) => (form.style.display = \"none\"));\n\n    // Hiện form được chọn\n    document.getElementById(formId).style.display = \"block\";\n\n    // Nếu là Edit Task, gọi hàm để load TaskID\n    if (formId === \"editTaskForm\") {\n      loadTaskIDs();\n    }\n  } catch (error) {\n    console.error(\"Error showing form:\", error);\n    // Bạn có thể thêm thông báo cho người dùng nếu cần\n    const notificationEl = document.getElementById(\"notification\");\n    notificationEl.textContent = \"Đã xảy ra lỗi khi hiển thị form.\";\n    notificationEl.classList.remove(\"d-none\");\n  }\n}\n\nfunction loadTaskIDs() {\n  Excel.run(function (context) {\n    const sheet = context.workbook.worksheets.getItem(\"WBS\");\n    const table = sheet.tables.getItem(\"TblWbs\");\n    const taskIDColumn = table.getDataBodyRange().getColumn(0); // Giả sử TaskID là cột đầu tiên\n\n    taskIDColumn.load(\"values\");\n    return context.sync().then(function () {\n      const taskIDDropdown = document.getElementById(\"editTaskID\");\n      taskIDDropdown.innerHTML = '<option value=\"\">Chọn TaskID</option>'; // Reset dropdown\n\n      // Thêm các TaskID vào dropdown\n      taskIDColumn.values.forEach(function (row) {\n        const option = document.createElement(\"option\");\n        option.value = row[0]; // TaskID\n        option.textContent = row[0];\n        taskIDDropdown.appendChild(option);\n      });\n    });\n  }).catch(function (error) {\n    console.log(error);\n  });\n}\n\nfunction loadTaskDetails(taskID, formId) {\n  Excel.run(function (context) {\n    const sheet = context.workbook.worksheets.getItem(\"WBS\");\n    const table = sheet.tables.getItem(\"TblWbs\");\n    const range = table.getDataBodyRange();\n    range.load(\"values\");\n\n    return context.sync().then(function () {\n      const values = range.values;\n      const task = values.find((row) => row[0] === taskID); // Tìm task dựa trên TaskID\n\n      if (task) {\n        // Cập nhật các trường nhập liệu với thông tin từ task\n        if (formId === \"editForm\") {\n          document.querySelector(\"#editForm #taskName\").value = task[1]; // Task Name\n          document.querySelector(\"#editForm #type\").value = task[2]; // Type\n          document.querySelector(\"#editForm #pic\").value = task[3]; // PIC\n          document.querySelector(\"#editForm #reviewer\").value = task[4]; // Reviewer\n          document.querySelector(\"#editForm #pStartDate\").value = excelDateToJSDate(task[5]); // P.StartDate\n          document.querySelector(\"#editForm #pEndDate\").value = excelDateToJSDate(task[6]); // P.EndDate\n          document.querySelector(\"#editForm #pReleaseDate\").value = excelDateToJSDate(task[7]); // P.ReleaseDate\n          document.querySelector(\"#editForm #pEffort\").value = task[8]; // P.Effort\n          document.querySelector(\"#editForm #aStartDate\").value = excelDateToJSDate(task[9]); // A.StartDate\n          document.querySelector(\"#editForm #aEndDate\").value = excelDateToJSDate(task[10]); // A.EndDate\n          document.querySelector(\"#editForm #aEffort\").value = task[11]; // A.Effort\n          document.querySelector(\"#editForm #percentACompleted\").value = task[12]; // %A.Completed\n          document.querySelector(\"#editForm #aReleaseDate\").value = excelDateToJSDate(task[13]); // A.ReleaseDate\n          document.querySelector(\"#editForm #parentID\").value = task[14]; // ParentID\n          document.querySelector(\"#editForm #linkBackLog\").value = task[15]; // Link BackLog\n          document.querySelector(\"#editForm #linkJira\").value = task[16]; // Link Jira\n          document.querySelector(\"#editForm #linkEvidence\").value = task[17]; // Link Evidence\n        }\n\n        if (formId === \"progressForm\") {\n          document.querySelector(\"#progressForm #aStartDate\").value = excelDateToJSDate(task[9]); // A.StartDate\n          document.querySelector(\"#progressForm #aEndDate\").value = excelDateToJSDate(task[10]); // A.EndDate\n          document.querySelector(\"#progressForm #aEffort\").value = task[11]; // A.Effort\n          document.querySelector(\"#progressForm #percentACompleted\").value = task[12]; // %A.Completed\n          document.querySelector(\"#progressForm #aReleaseDate\").value = excelDateToJSDate(task[13]); // A.ReleaseDate\n        }\n      } else {\n        showNotification(\"không tìm thấy thông tin: \" + taskID, \"danger\");\n      }\n    });\n  }).catch(function (error) {\n    console.log(error);\n  });\n}\n\nfunction updateTaskDetails(taskID, formId) {\n  Excel.run(function (context) {\n    const sheet = context.workbook.worksheets.getItem(\"WBS\");\n    const table = sheet.tables.getItem(\"TblWbs\");\n    const range = table.getDataBodyRange();\n    range.load(\"values\");\n    return context.sync().then(function () {\n      const values = range.values;\n      const taskIndex = values.findIndex((row) => row[0] === taskID); // Find the index of the task\n      showNotification(\"index:\" + taskIndex, \"success\");\n      if (taskIndex !== -1) {\n        // Get updated values from the form\n        const task = values.find((row) => row[0] === taskID); // Tìm task dựa trên TaskID\n        let updatedTask = [];\n        if (formId === \"editForm\") {\n          updatedTask = [\n            taskID,\n            document.querySelector(\"#editForm #taskName\").value, // Task Name\n            document.querySelector(\"#editForm #type\").value, // Type\n            document.querySelector(\"#editForm #pic\").value, // PIC\n            document.querySelector(\"#editForm #reviewer\").value, // Reviewer\n            jsDateToExcelDate(document.querySelector(\"#editForm #pStartDate\").value), // P.StartDate\n            jsDateToExcelDate(document.querySelector(\"#editForm #pEndDate\").value), // P.EndDate\n            jsDateToExcelDate(document.querySelector(\"#editForm #pReleaseDate\").value), // P.ReleaseDate\n            document.querySelector(\"#editForm #pEffort\").value, // P.Effort\n            jsDateToExcelDate(document.querySelector(\"#editForm #aStartDate\").value), // A.StartDate\n            jsDateToExcelDate(document.querySelector(\"#editForm #aEndDate\").value), // A.EndDate\n            document.querySelector(\"#editForm #aEffort\").value, // A.Effort\n            document.querySelector(\"#editForm #percentACompleted\").value, // %A.Completed\n            jsDateToExcelDate(document.querySelector(\"#editForm #aReleaseDate\").value), // A.ReleaseDate\n            document.querySelector(\"#editForm #parentID\").value, // ParentID\n            document.querySelector(\"#editForm #linkBackLog\").value, // Link BackLog\n            document.querySelector(\"#editForm #linkJira\").value, // Link Jira\n            document.querySelector(\"#editForm #linkEvidence\").value, // Link Evidence\n          ];\n        }\n        if (formId === \"progressForm\") {\n          updatedTask = [\n            taskID,\n            task[1], // Task Name\n            task[2], // Type\n            task[3], // PIC\n            task[4], // Reviewer\n            task[5], // P.StartDate\n            task[6], // P.EndDate\n            task[7], // P.ReleaseDate\n            task[8], // P.Effort\n            jsDateToExcelDate(document.querySelector(\"#progressForm #aStartDate\").value), // A.StartDate\n            jsDateToExcelDate(document.querySelector(\"#progressForm #aEndDate\").value), // A.EndDate\n            document.querySelector(\"#progressForm #aEffort\").value, // A.Effort\n            document.querySelector(\"#progressForm #percentACompleted\").value, // %A.Completed\n            jsDateToExcelDate(document.querySelector(\"#progressForm #aReleaseDate\").value), // A.ReleaseDate\n            task[14], // ParentID\n            task[15], // Link BackLog\n            task[16], // Link Jira\n            task[17], // Link Evidence\n          ];\n        }\n\n        // Update the task in the values array\n        values[taskIndex] = updatedTask;\n\n        // Write the updated values back to the range\n        range.values = values;\n\n        return context.sync().then(function () {\n          showNotification(\"Cập nhật thông tin thành công!\", \"success\");\n        });\n      } else {\n        showNotification(\"Không tìm thấy thông tin: \" + taskID, \"danger\");\n      }\n    });\n  }).catch(function (error) {\n    console.log(error);\n  });\n}\n\nfunction excelDateToJSDate(excelDate) {\n  if (!excelDate || isNaN(excelDate)) {\n    return \"\";\n  }\n  const utcDate = new Date((excelDate - 25569) * 86400 * 1000);\n  return utcDate.toISOString().split(\"T\")[0]; // Return as 'YYYY-MM-DD'\n}\n\nfunction jsDateToExcelDate(dateString) {\n  const date = new Date(dateString);\n  let excelDate = 25569.0 + (date.getTime() - date.getTimezoneOffset() * 60 * 1000) / (1000 * 60 * 60 * 24);\n\n  return excelDate;\n}\n"],"names":["addTaskToWbs","form","document","getElementById","checkValidity","Excel","run","context","table","workbook","worksheets","getItem","tables","taskID","value","taskName","type","pic","reviewer","pStartDate","pEndDate","pReleaseDate","pEffort","aStartDate","aEndDate","aEffort","percentACompleted","aReleaseDate","parentID","linkBackLog","linkJira","linkEvidence","rows","add","sync","then","showNotification","catch","error","console","log","concat","message","reportValidity","notificationEl","textContent","className","classList","remove","setTimeout","showForm","formId","querySelectorAll","forEach","style","display","taskIDColumn","getDataBodyRange","getColumn","load","taskIDDropdown","innerHTML","values","row","option","createElement","appendChild","loadTaskDetails","range","task","find","querySelector","excelDateToJSDate","updateTaskDetails","taskIndex","findIndex","updatedTask","jsDateToExcelDate","excelDate","isNaN","Date","toISOString","split","dateString","date","getTime","getTimezoneOffset","Office","onReady","info","host","HostType","activate","OfficeExtension","Error","JSON","stringify","debugInfo","onclick","onblur","this"],"sourceRoot":""}