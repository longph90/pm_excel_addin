{"version":3,"file":"taskbymember.js","mappings":"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","sources":["webpack://office-addin-taskpane-js/./src/taskbymember/taskbymember.js"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global console, document, Excel, Office */\n// You can specify which plugins you need\n\nOffice.onReady((info) => {\n  if (info.host === Office.HostType.Excel) {\n    // initData();\n    loadAccounts();\n    getTasksByAccount();\n    document.getElementById(\"accountSelect\").onchange = loadFullname;\n\n    document.getElementById(\"btnUpdateProgress\").addEventListener(\"click\", function () {\n      const taskId = document.getElementById(\"progressTaskID\").value;\n      const taskData = {\n        startDate: document.getElementById(\"aStartDate\").value,\n        endDate: document.getElementById(\"aEndDate\").value,\n        effort: document.getElementById(\"aEffort\").value,\n        percentCompleted: document.getElementById(\"percentACompleted\").value,\n        releaseDate: document.getElementById(\"aReleaseDate\").value,\n      };\n      getTaskByID(taskId);\n      updateTaskDetails(taskId, taskData);\n      // Close the modal after update\n      var myModalElement = document.getElementById(\"updateProgressModal\");\n      // eslint-disable-next-line no-undef\n      var myModal = bootstrap.Modal.getInstance(myModalElement);\n\n      if (myModal) {\n        myModal.hide();\n      } else {\n        // eslint-disable-next-line no-undef\n        var newModal = new bootstrap.Modal(myModalElement);\n        newModal.hide();\n      }\n    });\n    var myModalElement = document.getElementById(\"updateProgressModal\");\n    myModalElement.addEventListener(\"hidden.bs.modal\", function () {\n      // Các hành động cần thiết sau khi modal đã đóng\n      writeHelloToCell(\"ABC XYZ\");\n      console.log(\"Modal đã đóng.\");\n    });\n  }\n});\nfunction writeHelloToCell(text) {\n  Excel.run(function (context) {\n    const sheet = context.workbook.worksheets.getItem(\"WBS\");\n    const range = sheet.getRange(\"A132\");\n    range.values = [[text]]; // Gán giá trị vào ô A132\n\n    return context.sync().then(function () {\n      console.log(\"Successfully wrote '\" + text + \"' to A132.\");\n    });\n  }).catch(function (error) {\n    console.error(error);\n  });\n}\n\nfunction updateTaskDetails(taskID, taskData) {\n  Excel.run(function (context) {\n    const sheet = context.workbook.worksheets.getItem(\"WBS\");\n    const table = sheet.tables.getItem(\"TblWbs\");\n    const range = table.getDataBodyRange();\n    range.load(\"values\");\n\n    return context.sync().then(function () {\n      const data = range.values;\n      const taskIndex = data.findIndex((row) => row[0] === taskID); // Tìm index của task\n\n      if (taskIndex !== -1) {\n        // Tạo một mảng mới với các giá trị cập nhật\n        const updatedRow = [...data[taskIndex]];\n        updatedRow[9] = jsDateToExcelDate(taskData.startDate);\n        updatedRow[10] = jsDateToExcelDate(taskData.endDate);\n        updatedRow[11] = taskData.effort;\n        updatedRow[12] = taskData.percentCompleted / 100;\n        updatedRow[13] = jsDateToExcelDate(taskData.releaseDate);\n\n        // Cập nhật toàn bộ hàng\n        range.getRow(taskIndex).values = [updatedRow];\n\n        return context.sync().then(function () {\n          showNotification(\"Update Successfully\", \"success\");\n        });\n      } else {\n        showNotification(\"Không tìm thấy thông tin: \" + taskID, \"danger\");\n      }\n    });\n  }).catch(function (error) {\n    console.log(error);\n    showNotification(\"Error updating task details: \" + error.message, \"danger\");\n  });\n}\n\nfunction getTaskByID(taskId) {\n  Excel.run(function (context) {\n    const sheet = context.workbook.worksheets.getItem(\"WBS\");\n\n    const table = sheet.tables.getItem(\"TblWbs\");\n    const range = table.getDataBodyRange();\n    range.load(\"values\");\n\n    return context.sync().then(function () {\n      const values = range.values;\n      const task = values.find((row) => row[0] === taskId); // Tìm task dựa trên TaskID\n      if (task) {\n        document.querySelector(\"#progressForm #progressTaskID\").value = taskId; // A.StartDate\n        document.querySelector(\"#progressForm #aStartDate\").value = excelDateToJSDate(task[9]); // A.StartDate\n        document.querySelector(\"#progressForm #aEndDate\").value = excelDateToJSDate(task[10]); // A.EndDate\n        document.querySelector(\"#progressForm #aEffort\").value = task[11]; // A.Effort\n        document.querySelector(\"#progressForm #percentACompleted\").value = task[12] * 100; // %A.Completed\n        document.querySelector(\"#progressForm #aReleaseDate\").value = excelDateToJSDate(task[13]); // A.ReleaseDate\n      } else {\n        showNotification(\"không tìm thấy thông tin: \" + taskId, \"danger\");\n      }\n    });\n  }).catch(function (error) {\n    console.log(error);\n  });\n}\n\nfunction initData() {\n  Excel.run(function (context) {\n    var sheet = context.workbook.worksheets.getItem(\"Setting\");\n    var range = sheet.getRange(\"B1:B5\");\n\n    range.load(\"values\");\n    return context.sync().then(function () {\n      var project_code = range.values[0];\n      var project_manager = range.values[1];\n      document.getElementById(\"v_project_code\").innerText = project_code;\n      document.getElementById(\"v_project_manager\").innerText = project_manager;\n    });\n  }).catch(function (error) {\n    console.log(\"Error: \" + error);\n  });\n}\n\nfunction loadAccounts() {\n  Excel.run(function (context) {\n    var sheet = context.workbook.worksheets.getItem(\"Resource\");\n    var table = sheet.tables.getItem(\"TblResource\");\n    var range = table.getRange();\n\n    range.load(\"values\");\n\n    return context.sync().then(function () {\n      var data = range.values; // Lấy toàn bộ giá trị trong bảng\n      var accountSelect = document.getElementById(\"accountSelect\");\n      var headers = data[0];\n\n      // Lặp qua dữ liệu để thêm vào combobox\n      for (var i = 1; i < data.length; i++) {\n        // Bỏ qua hàng tiêu đề\n        var account = data[i][headers.indexOf(\"Account\")]; // Column Account (index 1)\n        var option = document.createElement(\"option\");\n        option.value = account;\n        option.text = account;\n        accountSelect.appendChild(option);\n      }\n    });\n  }).catch(function (error) {\n    console.log(\"Error: \" + error);\n  });\n}\n\nfunction loadFullname() {\n  var accountSelect = document.getElementById(\"accountSelect\");\n  var selectedAccount = accountSelect.value;\n  var fullnameDisplay = document.getElementById(\"fullnameDisplay\");\n\n  if (selectedAccount) {\n    Excel.run(function (context) {\n      var sheet = context.workbook.worksheets.getItem(\"Resource\");\n      var table = sheet.tables.getItem(\"TblResource\");\n      var range = table.getRange();\n\n      range.load(\"values\");\n\n      return context.sync().then(function () {\n        var data = range.values;\n        var headers = data[0];\n\n        // Tìm fullname tương ứng với account đã chọn\n        for (var i = 1; i < data.length; i++) {\n          // Bỏ qua hàng tiêu đề\n          if (data[i][headers.indexOf(\"Account\")] === selectedAccount) {\n            // Column Account (index 1)\n            fullnameDisplay.innerText = data[i][headers.indexOf(\"Fullname\")]; // Column Fullname (index 2)\n            getTasksByAccount();\n            return;\n          }\n        }\n        fullnameDisplay.innerText = \"\"; // Nếu không tìm thấy, xóa nội dung\n      });\n    }).catch(function (error) {\n      console.log(\"Error: \" + error);\n    });\n  } else {\n    fullnameDisplay.innerText = \"\"; // Nếu không chọn gì, xóa nội dung\n    getTasksByAccount();\n  }\n}\n\nfunction getTasksByAccount() {\n  const accountSelect = document.getElementById(\"accountSelect\");\n  const selectedAccount = accountSelect.value;\n\n  Excel.run(function (context) {\n    const sheet = context.workbook.worksheets.getItem(\"WBS\");\n    const table = sheet.tables.getItem(\"TblWbs\");\n    const range = table.getRange();\n    range.load(\"values\");\n    return context.sync().then(function () {\n      const data = range.values;\n\n      // Nhóm dữ liệu theo trạng thái\n      const groupedTasks = {\n        \"Tổng nhiệm vụ\": [],\n        \"Task đang làm\": [],\n        \"Task chưa làm\": [],\n        \"Task chờ review\": [],\n        \"Task chờ release\": [],\n        \"Task đã release\": [],\n      };\n\n      data.forEach((row) => {\n        const pic = row[3].trim().toLowerCase(); // Đặt chỉ số cột PIC\n        const completed = row[12]; // Đặt chỉ số cột Completed\n        if (pic === selectedAccount.trim().toLowerCase()) {\n          groupedTasks[\"Tổng nhiệm vụ\"].push(row);\n          if (completed > 0 && completed < 0.8) {\n            groupedTasks[\"Task đang làm\"].push(row);\n          } else if (completed === 0) {\n            groupedTasks[\"Task chưa làm\"].push(row);\n          } else if (completed === 0.8) {\n            groupedTasks[\"Task chờ review\"].push(row);\n          } else if (completed === 0.9) {\n            groupedTasks[\"Task chờ release\"].push(row);\n          } else if (completed === 1) {\n            groupedTasks[\"Task đã release\"].push(row);\n          }\n        }\n        if (selectedAccount.trim().toLowerCase() === \"\") {\n          groupedTasks[\"Tổng nhiệm vụ\"].push(row);\n          if (completed > 0 && completed < 0.8) {\n            groupedTasks[\"Task đang làm\"].push(row);\n          } else if (completed === 0) {\n            groupedTasks[\"Task chưa làm\"].push(row);\n          } else if (completed === 0.8) {\n            groupedTasks[\"Task chờ review\"].push(row);\n          } else if (completed === 0.9) {\n            groupedTasks[\"Task chờ release\"].push(row);\n          } else if (completed === 1) {\n            groupedTasks[\"Task đã release\"].push(row);\n          }\n        }\n      });\n      // Hiển thị kết quả ra HTML\n      // Cập nhật hiển thị số lượng và nội dung cho các nhóm tác vụ\n      const totalT = groupedTasks[\"Tổng nhiệm vụ\"].length;\n      const doingCount = groupedTasks[\"Task đang làm\"].length;\n      const notDoneCount = groupedTasks[\"Task chưa làm\"].length;\n      const reviewCount = groupedTasks[\"Task chờ review\"].length;\n      const releaseCount = groupedTasks[\"Task chờ release\"].length;\n      const releasedCount = groupedTasks[\"Task đã release\"].length;\n\n      document.getElementById(\"totalTasksCount\").innerText = totalT;\n      document.getElementById(\"doingCount\").innerText = doingCount;\n      document.getElementById(\"notDoneCount\").innerText = notDoneCount;\n      document.getElementById(\"reviewCount\").innerText = reviewCount;\n      document.getElementById(\"releaseCount\").innerText = releaseCount;\n      document.getElementById(\"releasedCount\").innerText = releasedCount;\n\n      // Progress Bar\n      document.getElementById(\"taskProgressBar\").innerHTML = addProgressBar(\n        totalT,\n        notDoneCount,\n        doingCount,\n        reviewCount,\n        releaseCount,\n        releasedCount\n      );\n      // Cập nhật nội dung cho từng nhóm tác vụ\n      document.getElementById(\"doingTasks\").innerHTML = createTaskTable(groupedTasks[\"Task đang làm\"]);\n      document.getElementById(\"notDoneTasks\").innerHTML = createTaskTable(groupedTasks[\"Task chưa làm\"]);\n      document.getElementById(\"reviewTasks\").innerHTML = createTaskTable(groupedTasks[\"Task chờ review\"]);\n      document.getElementById(\"releaseTasks\").innerHTML = createTaskTable(groupedTasks[\"Task chờ release\"]);\n      document.getElementById(\"releasedTasks\").innerHTML = createTaskTable(groupedTasks[\"Task đã release\"]);\n      // Gán sự kiện cho các thẻ <a> mới được thêm vào\n      addModalEventListeners();\n    });\n  }).catch(function (error) {\n    console.error(\"Error retrieving tasks:\", error);\n  });\n}\nfunction addProgressBar(total, notStarted, inProgress, waitForReview, waitForRelease, released) {\n  let progressBarHTML = `\n      <div class='progress-bar progress-bar-striped bg-danger'\n           role='progressbar'\n           style='width: ${(notStarted / total) * 100}%'\n           aria-valuenow='${(notStarted / total) * 100}'\n           aria-valuemin='0'\n           aria-valuemax='100'>\n          ${((notStarted / total) * 100).toFixed(2)}%\n      </div>\n`;\n\n  progressBarHTML += `\n      <div class='progress-bar progress-bar-striped bg-warning'\n           role='progressbar'\n           style='width: ${(inProgress / total) * 100}%'\n           aria-valuenow='${(inProgress / total) * 100}'\n           aria-valuemin='0'\n           aria-valuemax='100'>\n          ${((inProgress / total) * 100).toFixed(2)}%\n      </div>\n`;\n\n  progressBarHTML += `\n<div class='progress-bar progress-bar-striped bg-warning'\n     role='progressbar'\n     style='width: ${(waitForReview / total) * 100}%'\n     aria-valuenow='${(waitForReview / total) * 100}'\n     aria-valuemin='0'\n     aria-valuemax='100'>\n    ${((waitForReview / total) * 100).toFixed(2)}%\n</div>\n`;\n\n  progressBarHTML += `\n<div class='progress-bar progress-bar-striped bg-warning'\n     role='progressbar'\n     style='width: ${(waitForRelease / total) * 100}%'\n     aria-valuenow='${(waitForRelease / total) * 100}'\n     aria-valuemin='0'\n     aria-valuemax='100'>\n    ${((waitForRelease / total) * 100).toFixed(2)}%\n</div>\n`;\n\n  progressBarHTML += `\n<div class='progress-bar progress-bar-striped bg-success'\n     role='progressbar'\n     style='width: ${(released / total) * 100}%'\n     aria-valuenow='${(released / total) * 100}'\n     aria-valuemin='0'\n     aria-valuemax='100'>\n    ${((released / total) * 100).toFixed(2)}%\n</div>\n`;\n\n  return progressBarHTML;\n}\n\n// Hàm để tạo bảng từ dữ liệu tác vụ\nfunction createTaskTable(tasks) {\n  if (tasks.length === 0) {\n    return \"<p>No tasks available.</p>\";\n  }\n\n  // Bắt đầu tạo bảng\n  let table = \"<table class='table table-bordered'>\";\n  table += \"<thead><tr>\";\n  table += \"<th>TaskID</th><th>P.StartDate</th><th>P.EndDate</th><th>P.Effort</th>\";\n  table += \"<th>A.StartDate</th><th>A.EndDate</th><th>A.Effort</th><th>%A.Completed</th>\";\n  table += \"</tr></thead><tbody>\";\n\n  // Thêm từng hàng vào bảng\n  tasks.forEach((task) => {\n    table += \"<tr>\";\n    table += `<td><a href=\"#\" class=\"openModal btn btn-info\" data-taskid=\"${task[0]}\">${task[0]}</a></td>`; // TaskID với sự kiện click\n    table += `<td>${excelDateToJSDate(task[5])}</td>`; // P.StartDate\n    table += `<td>${excelDateToJSDate(task[6])}</td>`; // P.EndDate\n    table += `<td>${task[8]}</td>`; // P.Effort\n    table += `<td>${excelDateToJSDate(task[9])}</td>`; // A.StartDate\n    table += `<td>${excelDateToJSDate(task[10])}</td>`; // A.EndDate\n    table += `<td>${task[11]}</td>`; // A.Effort\n    table += `<td>${task[12] * 100}%</td>`; // A.Completed\n    table += \"</tr>\";\n  });\n\n  table += \"</tbody></table>\";\n  return table;\n}\n\nfunction addModalEventListeners() {\n  document.querySelectorAll(\".openModal\").forEach((link) => {\n    link.addEventListener(\"click\", function (event) {\n      event.preventDefault();\n      const taskId = this.getAttribute(\"data-taskid\");\n      document.getElementById(\"progressTaskID\").value = taskId; // Set TaskID in modal\n      getTaskByID(taskId);\n\n      // eslint-disable-next-line no-undef\n      var myModal = new bootstrap.Modal(document.getElementById(\"updateProgressModal\"));\n      myModal.show();\n    });\n  });\n}\n\nfunction createChart() {\n  Excel.run(function (context) {\n    var sheet = context.workbook.worksheets.getActiveWorksheet();\n    var range = sheet.getRange(\"A1:B5\"); // Đặt vùng dữ liệu cho biểu đồ\n\n    range.values = [\n      [\"Label\", \"Value\"],\n      [\"A\", 30],\n      [\"B\", 40],\n      [\"C\", 50],\n      [\"D\", 60],\n    ]; // Dữ liệu mẫu\n\n    return context.sync().then(function () {\n      // Xóa biểu đồ cũ nếu có\n      var ctx = document.getElementById(\"chartContainer\").getContext(\"2d\");\n\n      // Nếu biểu đồ đã tồn tại, xóa nó\n      if (window.myChart) {\n        window.myChart.destroy();\n      }\n\n      // Tạo biểu đồ mới\n      window.myChart = new Chart(ctx, {\n        type: \"bar\",\n        data: {\n          labels: [\"A\", \"B\", \"C\", \"D\"],\n          datasets: [\n            {\n              label: \"Task is completed\",\n              data: [10, 20, 30, 40],\n              backgroundColor: \"rgba(75, 192, 192, 0.2)\",\n              borderColor: \"rgba(75, 192, 192, 1)\",\n              borderWidth: 1,\n            },\n          ],\n        },\n        options: {\n          scales: {\n            y: {\n              beginAtZero: true,\n            },\n          },\n        },\n      });\n    });\n  }).catch(function (error) {\n    console.log(\"Error: \" + error);\n  });\n}\n\nfunction template() {\n  return Excel.run(function (context) {\n    /**\n     * Insert your Excel code here\n     */\n    const range = context.workbook.getSelectedRange();\n\n    // Read the range address\n    range.load(\"address\");\n\n    // Update the fill color\n    range.format.fill.color = \"red\";\n\n    return context.sync().then(function () {\n      document.getElementById(\"response-content\").textContent = \"response\";\n    });\n  });\n}\n\n/** Default helper for invoking an action and handling errors. */\nfunction tryCatch(callback) {\n  Promise.resolve()\n    .then(callback)\n    .catch(function (error) {\n      // Note: In a production add-in, you'd want to notify the user through your add-in's UI.\n      console.error(error);\n    });\n}\n\nfunction showNotification(message, type) {\n  const notificationEl = document.getElementById(\"notification\");\n  notificationEl.textContent = message;\n  notificationEl.className = `alert alert-${type} position-fixed bottom-0 start-50 translate-middle-x mb-3`;\n  notificationEl.classList.remove(\"d-none\");\n\n  // Ẩn thông báo sau 3 giây\n  // eslint-disable-next-line no-undef\n  setTimeout(() => {\n    notificationEl.classList.add(\"d-none\");\n  }, 3000);\n}\n\nfunction excelDateToJSDate(excelDate) {\n  if (!excelDate || isNaN(excelDate)) {\n    return \"\";\n  }\n  const utcDate = new Date((excelDate - 25569) * 86400 * 1000);\n  return utcDate.toISOString().split(\"T\")[0]; // Return as 'YYYY-MM-DD'\n}\n\nfunction jsDateToExcelDate(dateString) {\n  const date = new Date(dateString);\n  let excelDate = 25569.0 + (date.getTime() - date.getTimezoneOffset() * 60 * 1000) / (1000 * 60 * 60 * 24);\n  return excelDate;\n}\n"],"names":["getTaskByID","taskId","Excel","run","context","range","workbook","worksheets","getItem","tables","getDataBodyRange","load","sync","then","task","values","find","row","document","querySelector","value","excelDateToJSDate","showNotification","catch","error","console","log","loadFullname","selectedAccount","getElementById","fullnameDisplay","getRange","data","headers","i","length","indexOf","innerText","getTasksByAccount","groupedTasks","forEach","pic","trim","toLowerCase","completed","push","total","notStarted","inProgress","waitForReview","waitForRelease","released","progressBarHTML","totalT","doingCount","notDoneCount","reviewCount","releaseCount","releasedCount","innerHTML","concat","toFixed","createTaskTable","querySelectorAll","link","addEventListener","event","preventDefault","this","getAttribute","bootstrap","Modal","show","tasks","table","message","type","notificationEl","textContent","className","classList","remove","setTimeout","add","excelDate","isNaN","Date","toISOString","split","jsDateToExcelDate","dateString","date","getTime","getTimezoneOffset","Office","onReady","info","host","HostType","accountSelect","account","option","createElement","text","appendChild","onchange","taskData","startDate","endDate","effort","percentCompleted","releaseDate","taskID","taskIndex","findIndex","updatedRow","getRow","updateTaskDetails","myModalElement","myModal","getInstance","hide"],"sourceRoot":""}