{"version":3,"file":"taskbymember.js","mappings":"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","sources":["webpack://office-addin-taskpane-js/./src/commons/common.js","webpack://office-addin-taskpane-js/webpack/bootstrap","webpack://office-addin-taskpane-js/webpack/runtime/define property getters","webpack://office-addin-taskpane-js/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane-js/./src/taskbymember/taskbymember.js"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global console, document, Excel, Office */\n/* global bootstrap */\n\nexport const STATUS = Object.freeze({\n  OPEN: \"OPEN\",\n  IN_PROGRESS: \"IN_PROGRESS\",\n  WAITING_REVIEW: \"WAITING_REVIEW\",\n  WAITING_RELEASE: \"WAITING_RELEASE\",\n  RELEASED: \"RELEASED\",\n});\n\n/**\n * Converts a JavaScript Date string to an Excel date number.\n * @param {string} dateString - The date string in 'YYYY-MM-DD' format.\n * @returns {number} The Excel date number.\n */\nexport function jsDateToExcelDate(dateString) {\n  // Convert the date string to a JavaScript Date object\n  const date = new Date(dateString);\n  // Convert JavaScript Date to Excel date number\n  let excelDate = 25569.0 + (date.getTime() - date.getTimezoneOffset() * 60 * 1000) / (1000 * 60 * 60 * 24);\n  return excelDate;\n}\n\n/**\n * Converts an Excel date number to a JavaScript Date object.\n * @param {number} excelDate - The Excel date number.\n * @returns {string} The date in 'YYYY-MM-DD' format, or an empty string if input is invalid.\n */\nexport function excelDateToJSDate(excelDate) {\n  // Check if the input is valid\n  if (!excelDate || isNaN(excelDate)) {\n    return \"\";\n  }\n  // Convert Excel date to JavaScript Date\n  const utcDate = new Date((excelDate - 25569) * 86400 * 1000);\n  // Return the date in 'YYYY-MM-DD' format\n  return utcDate.toISOString().split(\"T\")[0];\n}\nexport function convertDecimalToTime(decimal) {\n  if (decimal === null || decimal === \"\") return \"\";\n  const totalMinutes = Math.round(decimal * 24 * 60);\n  const hours = Math.floor(totalMinutes / 60);\n  const minutes = totalMinutes % 60;\n\n  const formattedHours = String(hours).padStart(2, \"0\");\n  const formattedMinutes = String(minutes).padStart(2, \"0\");\n\n  return `${formattedHours}:${formattedMinutes}`;\n}\n\n/**\n * Displays a notification message to the user.\n * @param {string} message - The message to display.\n * @param {string} type - The type of notification (e.g., 'success', 'error', 'warning').\n */\nexport function showNotification(message, type) {\n  // Get the notification element\n  const notificationEl = document.getElementById(\"notification\");\n\n  // Set the message content\n  notificationEl.textContent = message;\n\n  // Set the CSS classes for styling and positioning\n  notificationEl.className = `alert alert-${type}`;\n\n  // Make the notification visible\n  notificationEl.style.display = \"block\";\n\n  // Hide the notification after 5 seconds\n  setTimeout(() => {\n    notificationEl.style.display = \"none\";\n  }, 10000);\n}\n\nexport async function getDataTable(sheetName, tableName) {\n  try {\n    return await Excel.run(async (context) => {\n      // Get the specified sheet\n      const sheet = context.workbook.worksheets.getItem(sheetName);\n      // Get the specified table\n      const table = sheet.tables.getItem(tableName);\n      // Load the header row\n      const range = table.getRange();\n      range.load(\"values\");\n\n      await context.sync();\n      return range.values; // Trả về dữ liệu\n    });\n  } catch (error) {\n    showNotification(\"Error when reading data from \" + sheetName + \": \" + error.message, \"danger\");\n    throw error; // Ném lỗi để xử lý bên ngoài\n  }\n}\n\nexport async function getDataHeader(sheetName, tableName) {\n  try {\n    const data = await getDataTable(sheetName, tableName);\n    return data[0];\n  } catch (error) {\n    showNotification(\"Error when reading data from\" + sheetName + \": \" + error.message, \"danger\");\n  }\n}\n\nexport async function getIndexByColumnName(sheetName, tableName, columnName) {\n  try {\n    const data = await getDataTable(sheetName, tableName);\n    return data[0].indexOf(columnName);\n  } catch (error) {\n    return -1;\n  }\n}\n\nexport function getIndexRowbyTaskId(data, taskId) {\n  try {\n    const taskIndex = data.findIndex((row) => row[0] === taskId); // Tìm index của task\n    return taskIndex;\n  } catch (error) {\n    return -1;\n  }\n}\nexport function updateDataTable(sheetName, tableName, rowIndex, updateDict) {\n  return new Promise((resolve, reject) => {\n    Excel.run((context) => {\n      // Lấy sheet được chỉ định\n      let sheet = context.workbook.worksheets.getItem(sheetName);\n      // Lấy table được chỉ định\n      let table = sheet.tables.getItem(tableName);\n      // Lấy range của table\n      let range = table.getRange();\n      range.load(\"values\");\n\n      return context.sync().then(() => {\n        // Lấy header row\n        let headerRow = range.values[0];\n        // Tạo map từ tên cột đến index\n        let columnIndexMap = {};\n        headerRow.forEach((columnName, index) => {\n          columnIndexMap[columnName] = index;\n        });\n\n        // Cập nhật các giá trị tại vị trí chỉ định\n        for (let columnName in updateDict) {\n          if (Object.prototype.hasOwnProperty.call(updateDict, columnName)) {\n            let columnIndex = columnIndexMap[columnName];\n            if (columnIndex !== undefined) {\n              range.values[rowIndex][columnIndex] = updateDict[columnName];\n            } else {\n              reject(`Column name \"${columnName}\" not found`);\n              return;\n            }\n          }\n        }\n\n        // Chỉ cập nhật đúng range ứng với rowIndex\n        let rowRange = table.getDataBodyRange().getRow(rowIndex);\n        rowRange.values = [range.values[rowIndex]];\n\n        return context.sync().then(() => {\n          resolve(\"Data updated successfully\");\n        });\n      });\n    }).catch((error) => {\n      showNotification(\"Error when updating data in \" + sheetName + \": \" + error.message, \"danger\");\n      reject(error);\n    });\n  });\n}\n\nexport function insertDataTable(sheetName, tableName, updateDict) {\n  return new Promise((resolve, reject) => {\n    Excel.run((context) => {\n      // Lấy sheet được chỉ định\n      let sheet = context.workbook.worksheets.getItem(sheetName);\n      // Lấy table được chỉ định\n      let table = sheet.tables.getItem(tableName);\n      // Lấy range của table\n      let range = table.getRange();\n      range.load(\"values\");\n\n      return context.sync().then(() => {\n        // Lấy header row\n        let headerRow = range.values[0];\n        // Tạo một mảng mới cho hàng cần thêm\n        let newRow = new Array(headerRow.length).fill(\"\");\n\n        // Cập nhật các giá trị từ updateDict\n        for (let columnName in updateDict) {\n          if (Object.prototype.hasOwnProperty.call(updateDict, columnName)) {\n            let columnIndex = headerRow.indexOf(columnName);\n            if (columnIndex !== -1) {\n              newRow[columnIndex] = updateDict[columnName];\n            } else {\n              reject(`Column name \"${columnName}\" not found`);\n              return;\n            }\n          }\n        }\n\n        // Thêm hàng mới vào cuối table\n        table.rows.add(null, [newRow]);\n\n        return context.sync().then(() => {\n          resolve(\"Data inserted successfully\");\n        });\n      });\n    }).catch((error) => {\n      showNotification(\"Error when inserting data in \" + sheetName + \": \" + error.message, \"danger\");\n      reject(error);\n    });\n  });\n}\n\nexport function mapData(\n  SheetNameSource,\n  TableNameSource,\n  KeyColumnNameSource,\n  ListColumnNameSource,\n  SheetNameTarget,\n  TableNameTarget,\n  KeyColumnNameTarget,\n  ListColumnNameTarget\n) {\n  return Excel.run((context) => {\n    const sourceSheet = context.workbook.worksheets.getItem(SheetNameSource);\n    const sourceTable = sourceSheet.tables.getItem(TableNameSource);\n    const targetSheet = context.workbook.worksheets.getItem(SheetNameTarget);\n    const targetTable = targetSheet.tables.getItem(TableNameTarget);\n\n    // Load the data from source and target tables\n    const sourceRange = sourceTable.getDataBodyRange();\n    const targetRange = targetTable.getDataBodyRange();\n\n    sourceRange.load(\"values\");\n    targetRange.load(\"values\");\n\n    // Load header rows\n    const sourceHeaderRange = sourceTable.getHeaderRowRange();\n    const targetHeaderRange = targetTable.getHeaderRowRange();\n    sourceHeaderRange.load(\"values\");\n    targetHeaderRange.load(\"values\");\n\n    return context\n      .sync()\n      .then(() => {\n        const sourceData = sourceRange.values;\n        const targetData = targetRange.values;\n        const targetKeys = new Set(targetData.map((row) => row[0])); // Assuming KeyColumnNameTarget is the first column\n\n        // Get indexes for columns\n        const headersSource = sourceHeaderRange.values[0];\n        const headersTarget = targetHeaderRange.values[0];\n        const keyColIndexSource = headersSource.indexOf(KeyColumnNameSource);\n        const listColIndexesSource = ListColumnNameSource.map((col) => headersSource.indexOf(col));\n        const keyColIndexTarget = headersTarget.indexOf(KeyColumnNameTarget);\n        const listColIndexesTarget = ListColumnNameTarget.map((col) => headersTarget.indexOf(col));\n\n        const newRows = [];\n\n        // Loop through source data to find new entries\n        sourceData.forEach((row) => {\n          const keyValue = row[keyColIndexSource];\n\n          if (!targetKeys.has(keyValue)) {\n            let newRow = new Array(headersTarget.length).fill(\"\");\n            listColIndexesSource.forEach((sourceIndex, index) => {\n              const targetIndex = listColIndexesTarget[index];\n              newRow[targetIndex] = row[sourceIndex];\n            });\n            newRows.push(newRow);\n          }\n          // else {\n          //   const taskIndex = targetData.findIndex((row) => row[keyColIndexTarget] === keyValue);\n          //   if (taskIndex !== -1) {\n          //     const updatedRow = [...targetData[taskIndex]];\n          //     listColIndexesSource.forEach((sourceIndex, index) => {\n          //       const targetIndex = listColIndexesTarget[index];\n          //       updatedRow[targetIndex] = row[sourceIndex];\n          //     });\n          //     targetRange.getRow(taskIndex).values = [updatedRow];\n          //   }\n          // }\n        });\n\n        // If there are new rows to insert, add them to the target table\n        if (newRows.length > 0) {\n          targetTable.rows.add(null, newRows);\n          return context.sync().then(() => {\n            console.log(\"Mapping completed. New rows inserted:\", newRows.length);\n          });\n        } else {\n          console.log(\"No new rows to insert.\");\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  });\n}\n\nexport function openHtmlFile(filePath) {\n  Office.context.ui.displayDialogAsync(filePath, { height: 50, width: 50 }, function (asyncResult) {\n    if (asyncResult.status === Office.AsyncResultStatus.Failed) {\n      console.error(\"Failed to open dialog: \" + asyncResult.error.message);\n    } else {\n      console.log(\"Dialog opened successfully.\");\n      var dialog = asyncResult.value;\n      dialog.addEventHandler(Office.EventType.DialogMessageReceived, function (message) {\n        console.log(\"Message from dialog: \" + message.message);\n      });\n      dialog.addEventHandler(Office.EventType.DialogEventReceived, function (event) {\n        console.log(\"Dialog event received: \" + event.error);\n      });\n    }\n  });\n}\n\n// Function to convert a 2D array into JSON format\nexport function convertToJSON(array) {\n  // Extract the first row of the array as headers (keys for the JSON objects)\n  const headers = array[0];\n  // Extract the rest of the rows as data\n  const data = array.slice(1);\n\n  // Map through each row in the data array\n  return data.map((row) => {\n    let obj = {};\n    // Iterate over each value in the row and assign it to the corresponding header\n    row.forEach((value, index) => {\n      obj[headers[index]] = value; // Assign the value to the corresponding key (header)\n    });\n    return obj; // Return the object for each row\n  });\n}\n\nexport function isValidURL(text) {\n  const urlPattern = new RegExp(\n    \"^(https?:\\\\/\\\\/)?\" + // protocol\n      \"((([a-zA-Z\\\\d]([a-zA-Z\\\\d-]*[a-zA-Z\\\\d])*)\\\\.)+[a-zA-Z]{2,}|\" + // domain name\n      \"((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))\" + // OR ip (v4) address\n      \"(\\\\:\\\\d+)?(\\\\/[-a-zA-Z\\\\d%_.~+]*)*\" + // port and path\n      \"(\\\\?[;&a-zA-Z\\\\d%_.~+=-]*)?\" + // query string\n      \"(\\\\#[-a-zA-Z\\\\d_]*)?$\",\n    \"i\"\n  ); // fragment locator\n  return !!urlPattern.test(text);\n}\n\n/*Function for timesheet*/\nexport async function logWork(data) {\n  try {\n    await Excel.run(async (context) => {\n      const sheet = context.workbook.worksheets.getItem(\"Timesheet\");\n      const table = sheet.tables.getItem(\"TblTimesheet\");\n      const rows = table.rows.load(\"values\");\n\n      await context.sync();\n\n      let rowIndex = -1;\n      let message = \"\";\n      // for (let i = 0; i < rows.items.length; i++) {\n      //   const row = rows.items[i].values[0];\n\n      //   if (excelDateToJSDate(row[0]) === data.date && row[1] === data.taskID && row[2] === data.pic) {\n      //     rowIndex = i;\n      //     break;\n      //   }\n      // }\n\n      if (Number(data.rowIndex) !== -1) {\n        updateTimeSheet(context, table, data);\n        message = \"Time sheet updated successfully.\";\n      } else {\n        insertTimeSheet(context, table, data);\n        message = \"New time sheet entry added successfully.\";\n      }\n\n      await context.sync();\n      showNotification(message, \"success\");\n    });\n  } catch (error) {\n    console.error(error);\n    showNotification(\"Time sheet update failed.\" + error + \"with data: \" + JSON.stringify(data), \"error\");\n  }\n}\n\nfunction updateTimeSheet(context, table, data) {\n  const row = table.rows.getItemAt(Number(data.rowIndex));\n  let totalTime = calculateWorkTime(data.startTime, data.endTime);\n  row.values = [[null, null, null, data.startTime, data.endTime, totalTime, data.desc]];\n}\n\nfunction insertTimeSheet(context, table, data) {\n  let totalTime = calculateWorkTime(data.startTime, data.endTime);\n  table.rows.add(null, [[data.date, data.taskID, data.pic, data.startTime, data.endTime, totalTime, data.desc]]);\n}\nexport function calculateWorkTime(startTime, endTime) {\n  // Kiểm tra nếu startTime và endTime đều không rỗng\n  if (startTime && endTime) {\n    // Chuyển đổi thời gian từ chuỗi sang đối tượng Date\n    const start = new Date(`1970-01-01T${startTime}:00`);\n    const end = new Date(`1970-01-01T${endTime}:00`);\n    const lunchStart = new Date(`1970-01-01T12:00:00`);\n    const lunchEnd = new Date(`1970-01-01T13:00:00`);\n\n    // Tính toán thời gian làm việc\n    let totalTime = (end - start) / (1000 * 60 * 60); // Chuyển sang giờ\n\n    // Trừ thời gian nghỉ trưa nếu nó nằm trong khoảng thời gian làm việc\n    if (start < lunchStart && end > lunchEnd) {\n      totalTime -= 1; // Trừ 1 giờ nghỉ trưa\n    } else if (start < lunchEnd && end > lunchEnd) {\n      totalTime -= (lunchEnd - start) / (1000 * 60 * 60); // Trừ thời gian từ start đến hết nghỉ trưa\n    } else if (start < lunchStart && end > lunchStart) {\n      totalTime -= (end - lunchStart) / (1000 * 60 * 60); // Trừ thời gian từ bắt đầu nghỉ trưa đến end\n    }\n\n    return totalTime;\n  } else {\n    return 0; // Nếu startTime hoặc endTime rỗng, trả về 0\n  }\n}\nexport async function checkTaskIdExists(data) {\n  try {\n    return await Excel.run(async (context) => {\n      const sheet = context.workbook.worksheets.getItem(\"Timesheet\");\n      const table = sheet.tables.getItem(\"TblTimesheet\");\n      const rows = table.rows.load(\"values\");\n\n      await context.sync();\n\n      let result = {\n        rowIndex: -1,\n        startTime: null,\n        endTime: null,\n      };\n      for (let i = 0; i < rows.items.length; i++) {\n        const row = rows.items[i].values[0];\n        if (excelDateToJSDate(row[0]) === data.date && row[1] === data.taskID && row[2] === data.pic) {\n          result.rowIndex = i;\n          result.startTime = row[3];\n          result.endTime = row[4];\n          break;\n        }\n      }\n\n      return result;\n    });\n  } catch (error) {\n    console.error(error);\n    return {\n      rowIndex: -1,\n      startTime: null,\n      endTime: null,\n    };\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global console, document, Excel, Office, bootstrap */\n// You can specify which plugins you need\nimport {\n  excelDateToJSDate,\n  jsDateToExcelDate,\n  showNotification,\n  STATUS,\n  checkTaskIdExists,\n  convertDecimalToTime,\n  logWork,\n} from \"../commons/common.js\";\n\nOffice.onReady((info) => {\n  if (info.host === Office.HostType.Excel) {\n    // initData();\n\n    loadAccounts();\n    getTasksByAccount();\n    document.getElementById(\"accountSelect\").onchange = loadFullname;\n\n    //Test\n    document.getElementById(\"logWorkModal\").addEventListener(\"shown.bs.modal\", (event) => {\n      const button = event.relatedTarget;\n\n      const now = new Date();\n      const year = now.getFullYear();\n      const month = String(now.getMonth() + 1).padStart(2, \"0\"); // Tháng bắt đầu từ 0 nên cần +1\n      const day = String(now.getDate()).padStart(2, \"0\");\n      const currentDate = `${year}-${month}-${day}`;\n\n      const startTime = \"08:00\";\n      const endTime = \"17:00\";\n\n      document.getElementById(\"inputDate\").value = currentDate;\n      let data = {\n        date: currentDate,\n        taskID: null,\n        pic: null,\n        startTime: startTime,\n        endTime: endTime,\n      };\n      if (button) {\n        const taskID = button.getAttribute(\"data-taskid\");\n        const taskPic = button.getAttribute(\"data-taskpic\");\n        document.getElementById(\"inputTaskID\").value = taskID;\n        document.getElementById(\"inputPIC\").value = taskPic;\n        data.taskID = taskID;\n        data.pic = taskPic;\n      }\n      document.getElementById(\"inputStartTime\").value = startTime;\n      document.getElementById(\"inputEndTime\").value = endTime;\n      checkTaskIdExists(data).then((result) => {\n        if (result.rowIndex !== -1) {\n          document.getElementById(\"logwork-info\").innerText = \"UPDATE: check StartTime and EndTime before submitting\";\n          document.getElementById(\"inputStartTime\").value = convertDecimalToTime(result.startTime);\n          document.getElementById(\"inputEndTime\").value = convertDecimalToTime(result.endTime);\n          document.getElementById(\"logwork-rowIndex\").value = result.rowIndex;\n        } else {\n          document.getElementById(\"logwork-rowIndex\").value = -1;\n          document.getElementById(\"logwork-info\").innerText = \"NEW: check information before submitting\";\n        }\n      });\n\n      document.getElementById(\"btn-startTime-now\").addEventListener(\"click\", function () {\n        const now = new Date();\n        const hours = String(now.getHours()).padStart(2, \"0\");\n        const minutes = String(now.getMinutes()).padStart(2, \"0\");\n        const currentTime = `${hours}:${minutes}`;\n        document.getElementById(\"inputStartTime\").value = currentTime;\n      });\n      document.getElementById(\"btn-endTime-now\").addEventListener(\"click\", function () {\n        const now = new Date();\n        const hours = String(now.getHours()).padStart(2, \"0\");\n        const minutes = String(now.getMinutes()).padStart(2, \"0\");\n        const currentTime = `${hours}:${minutes}`;\n        document.getElementById(\"inputEndTime\").value = currentTime;\n      });\n    });\n\n    document.getElementById(\"btnStartTime\").addEventListener(\"click\", () => {\n      const data = {\n        rowIndex: document.getElementById(\"logwork-rowIndex\").value,\n        date: document.getElementById(\"inputDate\").value,\n        taskID: document.getElementById(\"inputTaskID\").value,\n        pic: document.getElementById(\"inputPIC\").value,\n        startTime: document.getElementById(\"inputStartTime\").value,\n        endTime: document.getElementById(\"inputEndTime\").value,\n        desc: document.getElementById(\"inputDesc\").value,\n      };\n\n      showNotification(\"data:\" + JSON.stringify(data));\n      logWork(data);\n      const myModalEl = document.getElementById(\"logWorkModal\");\n      const modal = bootstrap.Modal.getInstance(myModalEl);\n      modal.hide(); // Close the modal after submission\n    });\n\n    // Add click event listener to the \"Update Progress\" button\n    document.getElementById(\"btnUpdateProgress\").addEventListener(\"click\", function () {\n      // Get the task ID from the input field\n      const taskId = document.getElementById(\"progressTaskID\").value;\n\n      // Create an object with updated task data from form inputs\n      const taskData = {\n        // get plan value\n        pic: document.getElementById(\"pic\").value,\n        reviewer: document.getElementById(\"reviewer\").value,\n        pStartDate: document.getElementById(\"pStartDate\").value,\n        pEndDate: document.getElementById(\"pEndDate\").value,\n        pEffort: document.getElementById(\"pEffort\").value,\n\n        // get actual value\n        startDate: document.getElementById(\"aStartDate\").value,\n        endDate: document.getElementById(\"aEndDate\").value,\n        effort: document.getElementById(\"aEffort\").value,\n        percentCompleted: document.getElementById(\"percentACompleted\").value,\n        releaseDate: document.getElementById(\"aReleaseDate\").value,\n\n        // get task note\n        taskNote: document.getElementById(\"taskNote\").value,\n\n        // get link value\n        linkJR: document.getElementById(\"linkJira\").value,\n        linkBD: document.getElementById(\"linkBD\").value,\n        linkDD: document.getElementById(\"linkDD\").value,\n        linkET: document.getElementById(\"linkEstimatedTask\").value,\n        linkED: document.getElementById(\"linkEvidence\").value,\n        linkFR: document.getElementById(\"linkFileReview\").value,\n      };\n\n      // Fetch the task by ID (possibly to validate or prepare for update)\n      getTaskByID(taskId);\n\n      // Update the task details with the new data\n      updateTaskDetails(taskId, taskData);\n      loadFullname();\n\n      // Close the modal after update\n      let myModalElement = document.getElementById(\"updateProgressModal\");\n\n      // Try to get an instance of the Bootstrap modal\n      // eslint-disable-next-line no-undef\n      let myModal = bootstrap.Modal.getInstance(myModalElement);\n\n      if (myModal) {\n        // If an instance exists, hide the modal\n        myModal.hide();\n      } else {\n        // If no instance exists, create a new one and hide it\n        // eslint-disable-next-line no-undef\n        let newModal = new bootstrap.Modal(myModalElement);\n        newModal.hide();\n      }\n    });\n\n    let myModalElement = document.getElementById(\"updateProgressModal\");\n    myModalElement.addEventListener(\"hidden.bs.modal\", function () {\n      // Các hành động cần thiết sau khi modal đã đóng\n      console.log(\"Modal đã đóng.\");\n    });\n\n    // Wait for the DOM to be fully loaded before executing the script\n    document.addEventListener(\"DOMContentLoaded\", function () {\n      // Set the default date for the logwork form to today's date\n      setDefaultLogworkDate();\n    });\n  }\n});\n\n/**\n * Sets the default date for the logwork form to today's date.\n */\nfunction setDefaultLogworkDate() {\n  // Get today's date in YYYY-MM-DD format\n  const today = getTodayDate();\n\n  // Set the value of the date input field\n  const dateInput = document.getElementById(\"logworkForm_date\");\n  if (dateInput) {\n    dateInput.value = today;\n  } else {\n    console.warn(\"Logwork date input field not found\");\n  }\n}\n\n/**\n * Returns today's date in YYYY-MM-DD format.\n * @returns {string} Today's date in YYYY-MM-DD format\n */\nfunction getTodayDate() {\n  return new Date().toISOString().split(\"T\")[0];\n}\n\nfunction updateTaskDetails(taskID, taskData) {\n  Excel.run(function (context) {\n    const sheet = context.workbook.worksheets.getItem(\"WBS\");\n    const table = sheet.tables.getItem(\"TblWbs\");\n    const range = table.getDataBodyRange();\n    range.load(\"values\");\n\n    return context.sync().then(function () {\n      const data = range.values;\n      const taskIndex = data.findIndex((row) => row[0] === taskID); // Tìm index của task\n\n      if (taskIndex !== -1) {\n        // Tạo một mảng mới với các giá trị cập nhật\n        const updatedRow = [...data[taskIndex]];\n\n        // Update value for plan section\n        updatedRow[3] = taskData.pic;\n        updatedRow[4] = taskData.reviewer;\n        updatedRow[5] = jsDateToExcelDate(taskData.pStartDate);\n        updatedRow[6] = jsDateToExcelDate(taskData.pEndDate);\n        updatedRow[8] = taskData.pEffort;\n\n        // Update value for actual section\n        updatedRow[9] = jsDateToExcelDate(taskData.startDate);\n        updatedRow[10] = jsDateToExcelDate(taskData.endDate);\n        updatedRow[11] = taskData.effort;\n        updatedRow[12] = taskData.percentCompleted / 100;\n        updatedRow[13] = jsDateToExcelDate(taskData.releaseDate);\n\n        updatedRow[23] = taskData.taskNote;\n\n        // Cập nhật toàn bộ hàng\n        range.getRow(taskIndex).values = [updatedRow];\n\n        // Update value for link\n        const cellIndices = [16, 17, 18, 19, 20, 21];\n        const hyperlinks = [\n          { textToDisplay: \"Link\", screenTip: \"Link Jira\", address: taskData.linkJR },\n          { textToDisplay: \"Link\", screenTip: \"Link BD\", address: taskData.linkBD },\n          { textToDisplay: \"Link\", screenTip: \"Link DD\", address: taskData.linkDD },\n          { textToDisplay: \"Link\", screenTip: \"Link Estimation Task\", address: taskData.linkET },\n          { textToDisplay: \"Link\", screenTip: \"Link Evidence\", address: taskData.linkED },\n          { textToDisplay: \"Link\", screenTip: \"Link File Review\", address: taskData.linkFR },\n        ];\n\n        cellIndices.forEach((index, i) => {\n          let cellRange = range.getCell(taskIndex, index);\n          let hyperlink = hyperlinks[i];\n          if (hyperlink.address) {\n            // Kiểm tra nếu taskData có giá trị\n            cellRange.set({\n              hyperlink: hyperlink,\n            });\n          } else {\n            cellRange.values = [[\"\"]];\n          }\n        });\n\n        return context.sync().then(function () {\n          showNotification(\"Update Successfully\", \"success\");\n        });\n      } else {\n        showNotification(\"Không tìm thấy thông tin: \" + taskID, \"danger\");\n      }\n    });\n  }).catch(function (error) {\n    console.log(error);\n    showNotification(\"Error updating task details: \" + error.message, \"danger\");\n  });\n}\n\nfunction getTaskByID(taskId) {\n  Excel.run(function (context) {\n    const sheet = context.workbook.worksheets.getItem(\"WBS\");\n    const table = sheet.tables.getItem(\"TblWbs\");\n    const range = table.getDataBodyRange();\n    range.load([\"values\"]);\n\n    const sheetSetting = context.workbook.worksheets.getItem(\"Setting\");\n    const domain = sheetSetting.getRange(\"B3\");\n    domain.load(\"values\");\n\n    return context.sync().then(function () {\n      const values = range.values;\n\n      const task = values.find((row) => row[0] === taskId); // Tìm task dựa trên TaskID\n      const taskIndex = values.findIndex((row) => row[0] === taskId); // Lấy index của task\n      if (task) {\n        document.querySelector(\"#progressForm #progressTaskID\").value = taskId;\n\n        const linkToBack = document.querySelector(\"#linkToBack\");\n        const backlogUrl = domain.values[0][0];\n        linkToBack.href = `${backlogUrl}${taskId}`;\n        linkToBack.textContent = `Open Backlog`;\n        linkToBack.target = \"_blank\";\n        linkToBack.rel = \"noopener noreferrer\";\n\n        // For Plan Section\n        document.querySelector(\"#progressForm #pic\").value = task[3]; // PIC\n        document.querySelector(\"#progressForm #reviewer\").value = task[4]; // Reviewer\n        document.querySelector(\"#progressForm #pStartDate\").value = excelDateToJSDate(task[5]); // P.StartDate\n        document.querySelector(\"#progressForm #pEndDate\").value = excelDateToJSDate(task[6]); // P.EndDate\n        document.querySelector(\"#progressForm #pEffort\").value = task[8]; // P.Effort\n\n        // For Actual Section\n        document.querySelector(\"#progressForm #aStartDate\").value = excelDateToJSDate(task[9]); // A.StartDate\n        document.querySelector(\"#progressForm #aEndDate\").value = excelDateToJSDate(task[10]); // A.EndDate\n        document.querySelector(\"#progressForm #aEffort\").value = task[11]; // A.Effort\n        document.querySelector(\"#progressForm #percentACompleted\").value = task[12] * 100; // %A.Completed\n        document.querySelector(\"#progressForm #aReleaseDate\").value = excelDateToJSDate(task[13]); // A.ReleaseDate\n\n        // taskNote\n        document.querySelector(\"#progressForm #taskNote\").value = task[23]; // Note\n\n        // Lấy hyperlink từ giá trị hoặc từ đối tượng hyperlink nếu có\n        // Link Jira\n        const cellIndices = [16, 17, 18, 19, 20, 21];\n        const formFields = [\"linkJira\", \"linkBD\", \"linkDD\", \"linkEstimatedTask\", \"linkEvidence\", \"linkFileReview\"];\n\n        const cellRanges = cellIndices.map((index) => {\n          let cellRange = range.getCell(taskIndex, index);\n          cellRange.load(\"hyperlink\");\n          return cellRange;\n        });\n\n        return context.sync().then(function () {\n          cellRanges.forEach((cellRange, i) => {\n            let hyperlink = cellRange.hyperlink;\n            let value = hyperlink ? hyperlink.address : task[cellIndices[i]];\n            document.querySelector(`#progressForm #${formFields[i]}`).value = value;\n          });\n        });\n      } else {\n        showNotification(\"không tìm thấy thông tin: \" + taskId, \"danger\");\n      }\n    });\n  }).catch(function (error) {\n    console.log(error);\n  });\n}\n\nfunction initData() {\n  Excel.run(function (context) {\n    var sheet = context.workbook.worksheets.getItem(\"Setting\");\n    var range = sheet.getRange(\"B1:B5\");\n\n    range.load(\"values\");\n    return context.sync().then(function () {\n      var project_code = range.values[0];\n      var project_manager = range.values[1];\n      document.getElementById(\"v_project_code\").innerText = project_code;\n      document.getElementById(\"v_project_manager\").innerText = project_manager;\n    });\n  }).catch(function (error) {\n    console.log(\"Error: \" + error);\n  });\n}\n\nfunction loadAccounts() {\n  Excel.run(function (context) {\n    let sheet = context.workbook.worksheets.getItem(\"Resource\");\n    let table = sheet.tables.getItem(\"TblResource\");\n    let range = table.getRange();\n\n    range.load(\"values\");\n\n    return context.sync().then(function () {\n      let data = range.values; // Lấy toàn bộ giá trị trong bảng\n      let accountSelect = document.getElementById(\"accountSelect\");\n      let headers = data[0];\n      let accountIndex = headers.indexOf(\"Account\");\n      // Lặp qua dữ liệu để thêm vào combobox\n      for (let i = 1; i < data.length; i++) {\n        // Bỏ qua hàng tiêu đề\n        let account = data[i][accountIndex]; // Column Account (index 1)\n        let option = document.createElement(\"option\");\n        option.value = account;\n        option.text = account;\n        accountSelect.appendChild(option);\n      }\n    });\n  }).catch(function (error) {\n    console.log(\"Error: \" + error);\n  });\n}\n\nfunction loadFullname() {\n  let accountSelect = document.getElementById(\"accountSelect\");\n  let selectedAccount = accountSelect.value;\n  let fullnameDisplay = document.getElementById(\"fullnameDisplay\");\n\n  if (selectedAccount) {\n    Excel.run(function (context) {\n      let sheet = context.workbook.worksheets.getItem(\"Resource\");\n      let table = sheet.tables.getItem(\"TblResource\");\n      let range = table.getRange();\n\n      range.load(\"values\");\n\n      return context.sync().then(function () {\n        let data = range.values;\n        let headers = data[0];\n\n        // Tìm fullname tương ứng với account đã chọn\n        for (let i = 1; i < data.length; i++) {\n          // Bỏ qua hàng tiêu đề\n          if (data[i][headers.indexOf(\"Account\")] === selectedAccount) {\n            // Column Account (index 1)\n            fullnameDisplay.innerText = data[i][headers.indexOf(\"Fullname\")]; // Column Fullname (index 2)\n            getTasksByAccount();\n            return;\n          }\n        }\n        fullnameDisplay.innerText = \"\"; // Nếu không tìm thấy, xóa nội dung\n      });\n    }).catch(function (error) {\n      console.log(\"Error: \" + error);\n    });\n  } else {\n    fullnameDisplay.innerText = \"\"; // Nếu không chọn gì, xóa nội dung\n    getTasksByAccount();\n  }\n}\n\nfunction getTasksByAccount() {\n  const selectedAccount = document.getElementById(\"accountSelect\").value.trim().toLowerCase();\n\n  Excel.run(function (context) {\n    const sheet = context.workbook.worksheets.getItem(\"WBS\");\n    const table = sheet.tables.getItem(\"TblWbs\");\n    const range = table.getRange();\n    range.load(\"values\");\n\n    return context.sync().then(function () {\n      const data = range.values;\n\n      // Update lại toàn bộ giá trị tại cell 16, 17, 18, 19 là giá trị hyperlink\n      const cellIndices = [16, 17, 18, 19, 20, 21];\n      const cellRanges = data\n        .map((row, rowIndex) => {\n          return cellIndices.map((index) => {\n            let cellRange = range.getCell(rowIndex, index);\n            cellRange.load([\"hyperlink\", \"rowIndex\", \"columnIndex\"]);\n            return cellRange;\n          });\n        })\n        .flat();\n\n      return context.sync().then(function () {\n        cellRanges.forEach((cellRange) => {\n          let hyperlink = cellRange.hyperlink;\n          if (hyperlink) {\n            let rowIndex = cellRange.rowIndex;\n            let colIndex = cellRange.columnIndex;\n            data[rowIndex][colIndex] = hyperlink.address;\n          }\n        });\n\n        const groupedTasks = processTaskData(data, selectedAccount);\n        updateUIWithTaskData(groupedTasks);\n      });\n    });\n  }).catch(function (error) {\n    console.error(\"Error retrieving tasks:\", error);\n    showNotification(\"Error retrieving tasks:\" + error, \"danger\");\n  });\n}\n\nfunction processTaskData(data, selectedAccount) {\n  const groupedTasks = {\n    \"Tổng nhiệm vụ\": [],\n    \"Task doing\": [],\n    \"Task notDone\": [],\n    \"Task review\": [],\n    \"Task release\": [],\n    \"Task released\": [],\n  };\n\n  data.forEach((row) => {\n    const pic = row[3].trim().toLowerCase();\n    const reviewer = row[4].trim().toLowerCase();\n    const completed = row[12];\n\n    if (shouldIncludeTask(pic, reviewer, selectedAccount)) {\n      categorizeTask(row, completed, groupedTasks);\n    }\n  });\n\n  return groupedTasks;\n}\n\nfunction shouldIncludeTask(pic, reviewer, selectedAccount) {\n  return selectedAccount === \"\" || pic === selectedAccount || reviewer === selectedAccount;\n}\n\nfunction categorizeTask(row, completed, groupedTasks) {\n  groupedTasks[\"Tổng nhiệm vụ\"].push(row);\n\n  if (completed > 0 && completed < 0.8) {\n    groupedTasks[\"Task doing\"].push(row);\n  } else if (completed === 0) {\n    groupedTasks[\"Task notDone\"].push(row);\n  } else if (completed === 0.8) {\n    groupedTasks[\"Task review\"].push(row);\n  } else if (completed === 0.9) {\n    groupedTasks[\"Task release\"].push(row);\n  } else if (completed === 1) {\n    groupedTasks[\"Task released\"].push(row);\n  }\n}\n\nfunction updateUIWithTaskData(groupedTasks) {\n  const counts = {\n    total: groupedTasks[\"Tổng nhiệm vụ\"].length,\n    doing: groupedTasks[\"Task doing\"].length,\n    notDone: groupedTasks[\"Task notDone\"].length,\n    review: groupedTasks[\"Task review\"].length,\n    release: groupedTasks[\"Task release\"].length,\n    released: groupedTasks[\"Task released\"].length,\n  };\n\n  updateTaskCounts(counts);\n  updateProgressBar(counts);\n  updateTaskTables(groupedTasks);\n  addEventListeners();\n}\n\nfunction updateTaskCounts(counts) {\n  Object.entries(counts).forEach(([key, value]) => {\n    const element = document.getElementById(`${key}Count`);\n    if (element) {\n      element.innerText = value;\n    } else {\n      console.warn(`Element with id \"${key}Count\" not found`);\n    }\n  });\n}\n\nfunction updateProgressBar(counts) {\n  document.getElementById(\"taskProgressBar\").innerHTML = addProgressBar(\n    counts.total,\n    counts.notDone,\n    counts.doing,\n    counts.review,\n    counts.release,\n    counts.released\n  );\n}\n\nfunction updateTaskTables(groupedTasks) {\n  const taskStatuses = {\n    notDoneTasks: STATUS.OPEN,\n    doingTasks: STATUS.IN_PROGRESS,\n    reviewTasks: STATUS.WAITING_REVIEW,\n    releaseTasks: STATUS.WAITING_RELEASE,\n    releasedTasks: null,\n  };\n\n  Object.entries(taskStatuses).forEach(([elementId, status]) => {\n    const taskGroup = elementId.replace(\"Tasks\", \"\");\n    document.getElementById(elementId).innerHTML = createTaskTable(groupedTasks[`Task ${taskGroup}`], status);\n  });\n}\n\nfunction addEventListeners() {\n  addModalEventListeners();\n  [STATUS.OPEN, STATUS.IN_PROGRESS, STATUS.WAITING_REVIEW, STATUS.WAITING_RELEASE].forEach(addBtnTaskStartListeners);\n}\n\nfunction addProgressBar(total, notStarted, inProgress, waitForReview, waitForRelease, released) {\n  let progressBarHTML = `\n      <div class='progress-bar progress-bar-striped bg-danger'\n           role='progressbar'\n           style='width: ${(notStarted / total) * 100}%'\n           aria-valuenow='${(notStarted / total) * 100}'\n           aria-valuemin='0'\n           aria-valuemax='100'>\n          ${((notStarted / total) * 100).toFixed(2)}%\n      </div>\n`;\n\n  progressBarHTML += `\n      <div class='progress-bar progress-bar-striped bg-warning'\n           role='progressbar'\n           style='width: ${(inProgress / total) * 100}%'\n           aria-valuenow='${(inProgress / total) * 100}'\n           aria-valuemin='0'\n           aria-valuemax='100'>\n          ${((inProgress / total) * 100).toFixed(2)}%\n      </div>\n`;\n\n  progressBarHTML += `\n<div class='progress-bar progress-bar-striped bg-warning'\n     role='progressbar'\n     style='width: ${(waitForReview / total) * 100}%'\n     aria-valuenow='${(waitForReview / total) * 100}'\n     aria-valuemin='0'\n     aria-valuemax='100'>\n    ${((waitForReview / total) * 100).toFixed(2)}%\n</div>\n`;\n\n  progressBarHTML += `\n<div class='progress-bar progress-bar-striped bg-warning'\n     role='progressbar'\n     style='width: ${(waitForRelease / total) * 100}%'\n     aria-valuenow='${(waitForRelease / total) * 100}'\n     aria-valuemin='0'\n     aria-valuemax='100'>\n    ${((waitForRelease / total) * 100).toFixed(2)}%\n</div>\n`;\n\n  progressBarHTML += `\n<div class='progress-bar progress-bar-striped bg-success'\n     role='progressbar'\n     style='width: ${(released / total) * 100}%'\n     aria-valuenow='${(released / total) * 100}'\n     aria-valuemin='0'\n     aria-valuemax='100'>\n    ${((released / total) * 100).toFixed(2)}%\n</div>\n`;\n\n  return progressBarHTML;\n}\n\n// Hàm để tạo bảng từ dữ liệu tác vụ\nfunction createTaskTable(tasks, status) {\n  if (tasks.length === 0) {\n    return \"<p>No tasks available.</p>\";\n  }\n\n  const headers = getTableHeaders(status);\n  const rows = tasks.map((task) => createTableRow(task, status));\n\n  return `\n    <table class='table table-bordered'>\n      <thead>\n        <tr>${headers.join(\"\")}</tr>\n      </thead>\n      <tbody>\n        ${rows.join(\"\")}\n      </tbody>\n    </table>\n  `;\n}\n\nfunction getTableHeaders(status) {\n  const baseHeaders = [\"TaskID\", \"TaskName\", \"P.StartDate\", \"P.EndDate\", \"P.Effort\", \"PIC\", \"Reviewer\"];\n\n  if (status !== STATUS.OPEN) {\n    // baseHeaders.push(\"A.StartDate\", \"A.EndDate\", \"A.Effort\", \"%A.Completed\");\n    baseHeaders.push(\"A.Effort\", \"%A.Completed\");\n  }\n\n  if ([STATUS.OPEN, STATUS.IN_PROGRESS, STATUS.WAITING_REVIEW, STATUS.WAITING_RELEASE].includes(status)) {\n    baseHeaders.push(\"Action\");\n  }\n\n  baseHeaders.push(\"Link Refer\");\n  return baseHeaders.map((header) => `<th>${header}</th>`);\n}\n\nfunction createTableRow(task, status) {\n  const cells = [\n    `<td><a href=\"#\" class=\"openModal link-info\" data-taskid=\"${task[0]}\">${task[0]}</a></td>`,\n    `<td><span class=\"d-inline-block text-truncate\" style=\"max-width: 50px;\">${task[1]}</span></td>`,\n    `<td>${excelDateToJSDate(task[5])}</td>`,\n    `<td>${excelDateToJSDate(task[6])}</td>`,\n    `<td>${task[8]}</td>`,\n    `<td>${task[3]}</td>`,\n    `<td>${task[4]}</td>`,\n  ];\n\n  if (status !== STATUS.OPEN) {\n    cells.push(\n      // `<td>${excelDateToJSDate(task[9])}</td>`,\n      // `<td>${excelDateToJSDate(task[10])}</td>`,\n      `<td>${task[11]}</td>`,\n      `<td>${task[12] * 100}%</td>`\n    );\n  }\n\n  cells.push(getActionButton(task, status));\n\n  const link = {\n    linkBD: task[17],\n    linkDD: task[18],\n    linkET: task[19],\n    linkEV: task[20],\n  };\n  cells.push(createDropdown(link));\n\n  return `<tr>${cells.join(\"\")}</tr>`;\n}\nfunction createDropdown(link) {\n  let dropdownItems = \"\"; // Chuỗi lưu trữ các mục trong dropdown\n\n  // Kiểm tra và thêm thẻ <li> nếu link tồn tại\n  if (link.linkBD) {\n    dropdownItems += `<li><a class=\"dropdown-item\" href=\"${link.linkBD}\" target=\"_blank\" rel=\"noopener noreferrer\">Link BD</a></li>`;\n  }\n  if (link.linkDD) {\n    dropdownItems += `<li><a class=\"dropdown-item\" href=\"${link.linkDD}\" target=\"_blank\" rel=\"noopener noreferrer\">Link DD</a></li>`;\n  }\n  if (link.linkET) {\n    dropdownItems += `<li><a class=\"dropdown-item\" href=\"${link.linkET}\" target=\"_blank\" rel=\"noopener noreferrer\">Link Estimation</a></li>`;\n  }\n  if (link.linkEV) {\n    dropdownItems += `<li><a class=\"dropdown-item\" href=\"${link.linkEV}\" target=\"_blank\" rel=\"noopener noreferrer\">Link Evidence</a></li>`;\n  }\n\n  // Nếu không có link nào tồn tại, thêm một mục \"No Links\"\n  if (!dropdownItems) {\n    dropdownItems = `<li><a class=\"dropdown-item\" href=\"#\">No Links Available</a></li>`;\n  }\n\n  // Trả về HTML hoàn chỉnh của dropdown\n  return `\n    <td>\n      <div class=\"dropdown\">\n        <button class=\"btn btn-sm btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n          Link\n        </button>\n        <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\n          ${dropdownItems}\n        </ul>\n      </div>\n    </td>\n  `;\n}\n\nfunction getActionButton(task, status) {\n  const buttons = {\n    [STATUS.OPEN]: {\n      class: \"btn-task-start btn-primary\",\n      icon: \"bi bi-play\",\n      tooltip: \"Click To Start Task\",\n      validateLink: task[18],\n    },\n    [STATUS.IN_PROGRESS]: {\n      class: \"btn-task-inprogress  btn-success\",\n      icon: \"bi bi-check-circle\",\n      tooltip: \"Mark as Completed\",\n      validateLink: task[17],\n    },\n    [STATUS.WAITING_REVIEW]: {\n      class: \"btn-task-review  btn-success\",\n      icon: \"bi bi-shield-fill-check\",\n      tooltip: \"Mark as Pass Review\",\n    },\n    [STATUS.WAITING_RELEASE]: {\n      class: \"btn-task-release btn-success\",\n      icon: \"bi bi-rocket\",\n      tooltip: \"Click To Release Task\",\n    },\n  };\n\n  const button = buttons[status];\n  if (!button) return \"\";\n\n  return `\n    <td>\n      <button \n        class=\"btn btn-sm ${button.class}\" \n        data-taskid=\"${task[0]}\" \n        data-validateLink=\"${button.validateLink}\"\n        title=\"${button.tooltip}\"\n        data-toggle=\"tooltip\" \n        data-placement=\"top\"\n      >\n        <i class=\"${button.icon}\"></i>\n      </button>\n      <button \n        class=\"btn btn-sm btn-danger btn-logwork\"\n        data-bs-toggle=\"modal\"\n        data-bs-target=\"#logWorkModal\"\n        data-taskid=\"${task[0]}\"\n        data-taskpic=\"${task[4]}\"\n        data-toggle=\"tooltip\" \n        title=\"Click to logwork\"\n      >\n        <i class=\"bi bi-clock-history\"></i>\n      </button>\n    </td>\n  `;\n}\n\nfunction addBtnTaskStartListeners(status) {\n  const listenerConfig = {\n    [STATUS.OPEN]: {\n      elementId: \"notDoneTasks\",\n      buttonClass: \"btn-task-start\",\n      completionPercentage: 0.1,\n      updateField: { index: 9, value: \"A.StartDate\" },\n      validateLink: { flg: true, message: \"Add link estimation vào, giỡn mặt hả???\" },\n    },\n    [STATUS.IN_PROGRESS]: {\n      elementId: \"doingTasks\",\n      buttonClass: \"btn-task-inprogress\",\n      completionPercentage: 0.8,\n      validateLink: { flg: true, message: \"Add link evidence vào, giỡn mặt hả???\" },\n    },\n    [STATUS.WAITING_REVIEW]: {\n      elementId: \"reviewTasks\",\n      buttonClass: \"btn-task-review\",\n      completionPercentage: 0.9,\n      updateField: { index: 10, value: \"A.EndDate\" },\n    },\n    [STATUS.WAITING_RELEASE]: {\n      elementId: \"releaseTasks\",\n      buttonClass: \"btn-task-release\",\n      completionPercentage: 1,\n      updateField: { index: 13, value: \"A.ReleaseDate\" },\n    },\n  };\n\n  const config = listenerConfig[status];\n  if (!config) return;\n\n  document.getElementById(config.elementId).addEventListener(\"click\", handleTaskUpdate);\n\n  function handleTaskUpdate(e) {\n    if (e.target && e.target.classList.contains(config.buttonClass)) {\n      if (config.validateLink) {\n        const validLink = e.target.getAttribute(\"data-validateLink\");\n        if (!validateLink(validLink, config.validateLink.message)) return;\n      }\n      const taskId = e.target.getAttribute(\"data-taskid\");\n      updateTaskInExcel(taskId, config)\n        .then(() => {\n          loadFullname();\n          showNotification(\"Task updated successfully!\", \"success\");\n        })\n        .catch((error) => {\n          console.log(error);\n          showNotification(`Error: ${error.message}`, \"danger\");\n        });\n    }\n  }\n  function validateLink(input, message) {\n    if (!input) {\n      showNotification(`${message}`, \"danger\");\n      return false;\n    }\n    return true;\n  }\n\n  function updateTaskInExcel(taskId, config) {\n    return Excel.run((context) => {\n      const wbsTable = context.workbook.tables.getItem(\"TblWbs\");\n      const wbsRange = wbsTable.getDataBodyRange();\n      wbsRange.load(\"values\");\n\n      return context.sync().then(() => {\n        const wbsData = wbsRange.values;\n        const taskIndex = wbsData.findIndex((row) => row[0] === taskId);\n\n        if (taskIndex !== -1) {\n          const updatedRow = [...wbsData[taskIndex]];\n          updatedRow[12] = config.completionPercentage; // %A.Completed\n\n          if (config.updateField) {\n            const today = new Date().toISOString().split(\"T\")[0]; // Format: YYYY-MM-DD\n            updatedRow[config.updateField.index] = jsDateToExcelDate(today);\n          }\n\n          wbsRange.getRow(taskIndex).values = [updatedRow];\n        }\n\n        return context.sync();\n      });\n    });\n  }\n}\n\nfunction addModalEventListeners() {\n  const openModalLinks = document.querySelectorAll(\".openModal\");\n  const updateProgressModal = document.getElementById(\"updateProgressModal\");\n  const progressTaskIDInput = document.getElementById(\"progressTaskID\");\n\n  openModalLinks.forEach((link) => {\n    link.addEventListener(\"click\", handleModalOpen);\n  });\n\n  function handleModalOpen(event) {\n    event.preventDefault();\n    const taskId = this.getAttribute(\"data-taskid\");\n    progressTaskIDInput.value = taskId;\n    getTaskByID(taskId);\n    showModal();\n  }\n\n  function showModal() {\n    // eslint-disable-next-line no-undef\n    const myModal = new bootstrap.Modal(updateProgressModal);\n    myModal.show();\n  }\n}\n"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","STATUS","freeze","OPEN","IN_PROGRESS","WAITING_REVIEW","WAITING_RELEASE","RELEASED","jsDateToExcelDate","dateString","date","Date","getTime","getTimezoneOffset","excelDateToJSDate","excelDate","toISOString","split","convertDecimalToTime","decimal","totalMinutes","Math","round","hours","floor","minutes","formattedHours","String","padStart","formattedMinutes","concat","showNotification","message","notificationEl","document","getElementById","textContent","className","style","display","setTimeout","logWork","_x8","_logWork","_callee6","data","_context6","Excel","run","_ref2","_callee5","context","sheet","table","_context5","workbook","worksheets","getItem","tables","rows","load","sync","Number","rowIndex","updateTimeSheet","insertTimeSheet","_x11","t0","console","error","JSON","stringify","row","getItemAt","totalTime","calculateWorkTime","startTime","endTime","desc","add","taskID","pic","start","end","lunchStart","lunchEnd","checkTaskIdExists","_x9","_checkTaskIdExists","_callee8","_context8","_ref3","_callee7","result","_context7","items","_x12","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","definition","key","get","obj","prop","getTaskByID","taskId","range","getDataBodyRange","domain","getRange","task","find","taskIndex","findIndex","querySelector","linkToBack","backlogUrl","href","target","rel","cellIndices","formFields","cellRanges","map","index","cellRange","getCell","hyperlink","address","log","loadFullname","selectedAccount","fullnameDisplay","headers","indexOf","innerText","getTasksByAccount","trim","toLowerCase","flat","colIndex","columnIndex","groupedTasks","reviewer","completed","shouldIncludeTask","categorizeTask","processTaskData","counts","total","doing","notDone","review","release","released","entries","_ref","_slicedToArray","element","warn","updateTaskCounts","notStarted","inProgress","waitForReview","waitForRelease","progressBarHTML","innerHTML","toFixed","updateProgressBar","taskStatuses","notDoneTasks","doingTasks","reviewTasks","releaseTasks","releasedTasks","_ref4","elementId","status","taskGroup","replace","tasks","baseHeaders","includes","header","getTableHeaders","cells","button","_defineProperty","class","icon","tooltip","validateLink","getActionButton","link","linkBD","linkDD","linkET","linkEV","dropdownItems","createDropdown","join","createTableRow","createTaskTable","updateTaskTables","openModalLinks","querySelectorAll","updateProgressModal","progressTaskIDInput","handleModalOpen","event","preventDefault","this","getAttribute","bootstrap","Modal","show","addEventListener","addModalEventListeners","addBtnTaskStartListeners","updateUIWithTaskData","config","buttonClass","completionPercentage","updateField","flg","classList","contains","input","wbsRange","wbsData","updatedRow","_toConsumableArray","today","getRow","updateTaskInExcel","Office","onReady","info","host","HostType","accountSelect","accountIndex","account","option","createElement","text","appendChild","onchange","relatedTarget","now","year","getFullYear","month","getMonth","day","getDate","currentDate","taskPic","getHours","getMinutes","currentTime","myModalEl","getInstance","hide","taskData","pStartDate","pEndDate","pEffort","startDate","endDate","effort","percentCompleted","releaseDate","taskNote","linkJR","linkED","linkFR","hyperlinks","textToDisplay","screenTip","set","updateTaskDetails","myModalElement","myModal","dateInput"],"sourceRoot":""}