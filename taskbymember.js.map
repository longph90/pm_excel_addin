{"version":3,"file":"taskbymember.js","mappings":"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","sources":["webpack://office-addin-taskpane-js/./src/taskbymember/common.js","webpack://office-addin-taskpane-js/./src/taskbymember/taskbymember.js"],"sourcesContent":["/**\n * Converts a JavaScript Date string to an Excel date number.\n * @param {string} dateString - The date string in 'YYYY-MM-DD' format.\n * @returns {number} The Excel date number.\n */\nexport function jsDateToExcelDate(dateString) {\n  // Convert the date string to a JavaScript Date object\n  const date = new Date(dateString);\n  // Convert JavaScript Date to Excel date number\n  let excelDate = 25569.0 + (date.getTime() - date.getTimezoneOffset() * 60 * 1000) / (1000 * 60 * 60 * 24);\n  return excelDate;\n}\n\n/**\n * Converts an Excel date number to a JavaScript Date object.\n * @param {number} excelDate - The Excel date number.\n * @returns {string} The date in 'YYYY-MM-DD' format, or an empty string if input is invalid.\n */\nexport function excelDateToJSDate(excelDate) {\n  // Check if the input is valid\n  if (!excelDate || isNaN(excelDate)) {\n    return \"\";\n  }\n  // Convert Excel date to JavaScript Date\n  const utcDate = new Date((excelDate - 25569) * 86400 * 1000);\n  // Return the date in 'YYYY-MM-DD' format\n  return utcDate.toISOString().split(\"T\")[0];\n}\n\n/**\n * Displays a notification message to the user.\n * @param {string} message - The message to display.\n * @param {string} type - The type of notification (e.g., 'success', 'error', 'warning').\n */\nexport function showNotification(message, type) {\n  // Get the notification element\n  const notificationEl = document.getElementById(\"notification\");\n\n  // Set the message content\n  notificationEl.textContent = message;\n\n  // Set the CSS classes for styling and positioning\n  notificationEl.className = `alert alert-${type} position-fixed bottom-0 start-50 translate-middle-x mb-3`;\n\n  // Make the notification visible\n  notificationEl.classList.remove(\"d-none\");\n\n  // Hide the notification after 3 seconds\n  // eslint-disable-next-line no-undef\n  setTimeout(() => {\n    notificationEl.classList.add(\"d-none\");\n  }, 3000);\n}\n\nexport async function getDataTable(sheetName, tableName) {\n  try {\n    const data = await Excel.run(async (context) => {\n      // Get the specified sheet\n      let sheet = context.workbook.worksheets.getItem(sheetName);\n      // Get the specified table\n      let table = sheet.tables.getItem(tableName);\n      // Load the header row\n      let range = table.getRange();\n      range.load(\"values\");\n\n      await context.sync();\n      return range.values;\n    });\n    return data;\n  } catch (error) {\n    showNotification(\"Error when reading data from\" + sheetName + \": \" + error.message, \"danger\");\n  }\n}\n\nexport async function getDataHeader(sheetName, tableName) {\n  try {\n    const data = await getDataTable(sheetName, tableName);\n    return data[0];\n  } catch (error) {\n    showNotification(\"Error when reading data from\" + sheetName + \": \" + error.message, \"danger\");\n  }\n}\n\nexport async function getIndexByColumnName(sheetName, tableName, columnName) {\n  try {\n    const data = await getDataTable(sheetName, tableName);\n    return data[0].indexOf(columnName);\n  } catch (error) {\n    return -1;\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global console, document, Excel, Office */\n// You can specify which plugins you need\nimport { excelDateToJSDate, jsDateToExcelDate, showNotification, getIndexByColumnName } from \"./common.js\";\n\nOffice.onReady((info) => {\n  if (info.host === Office.HostType.Excel) {\n    // initData();\n\n    loadAccounts();\n    getTasksByAccount();\n    document.getElementById(\"accountSelect\").onchange = loadFullname;\n\n    // Add click event listener to the \"Update Progress\" button\n    document.getElementById(\"btnUpdateProgress\").addEventListener(\"click\", function () {\n      // Get the task ID from the input field\n      const taskId = document.getElementById(\"progressTaskID\").value;\n\n      // Create an object with updated task data from form inputs\n      const taskData = {\n        startDate: document.getElementById(\"aStartDate\").value,\n        endDate: document.getElementById(\"aEndDate\").value,\n        effort: document.getElementById(\"aEffort\").value,\n        percentCompleted: document.getElementById(\"percentACompleted\").value,\n        releaseDate: document.getElementById(\"aReleaseDate\").value,\n      };\n\n      // Fetch the task by ID (possibly to validate or prepare for update)\n      getTaskByID(taskId);\n\n      // Update the task details with the new data\n      updateTaskDetails(taskId, taskData);\n\n      // Close the modal after update\n      let myModalElement = document.getElementById(\"updateProgressModal\");\n\n      // Try to get an instance of the Bootstrap modal\n      // eslint-disable-next-line no-undef\n      let myModal = bootstrap.Modal.getInstance(myModalElement);\n\n      if (myModal) {\n        // If an instance exists, hide the modal\n        myModal.hide();\n      } else {\n        // If no instance exists, create a new one and hide it\n        // eslint-disable-next-line no-undef\n        let newModal = new bootstrap.Modal(myModalElement);\n        newModal.hide();\n      }\n    });\n\n    let myModalElement = document.getElementById(\"updateProgressModal\");\n    myModalElement.addEventListener(\"hidden.bs.modal\", function () {\n      // Các hành động cần thiết sau khi modal đã đóng\n      console.log(\"Modal đã đóng.\");\n    });\n\n    // Wait for the DOM to be fully loaded before executing the script\n    document.addEventListener(\"DOMContentLoaded\", function () {\n      // Set the default date for the logwork form to today's date\n      setDefaultLogworkDate();\n    });\n  }\n});\n\n/**\n * Sets the default date for the logwork form to today's date.\n */\nfunction setDefaultLogworkDate() {\n  // Get today's date in YYYY-MM-DD format\n  const today = getTodayDate();\n\n  // Set the value of the date input field\n  const dateInput = document.getElementById(\"logworkForm_date\");\n  if (dateInput) {\n    dateInput.value = today;\n  } else {\n    console.warn(\"Logwork date input field not found\");\n  }\n}\n\n/**\n * Returns today's date in YYYY-MM-DD format.\n * @returns {string} Today's date in YYYY-MM-DD format\n */\nfunction getTodayDate() {\n  return new Date().toISOString().split(\"T\")[0];\n}\n\nfunction updateTaskDetails(taskID, taskData) {\n  Excel.run(function (context) {\n    const sheet = context.workbook.worksheets.getItem(\"WBS\");\n    const table = sheet.tables.getItem(\"TblWbs\");\n    const range = table.getDataBodyRange();\n    range.load(\"values\");\n\n    return context.sync().then(function () {\n      const data = range.values;\n      const taskIndex = data.findIndex((row) => row[0] === taskID); // Tìm index của task\n\n      if (taskIndex !== -1) {\n        // Tạo một mảng mới với các giá trị cập nhật\n        const updatedRow = [...data[taskIndex]];\n        updatedRow[9] = jsDateToExcelDate(taskData.startDate);\n        updatedRow[10] = jsDateToExcelDate(taskData.endDate);\n        updatedRow[11] = taskData.effort;\n        updatedRow[12] = taskData.percentCompleted / 100;\n        updatedRow[13] = jsDateToExcelDate(taskData.releaseDate);\n\n        // Cập nhật toàn bộ hàng\n        range.getRow(taskIndex).values = [updatedRow];\n\n        return context.sync().then(function () {\n          showNotification(\"Update Successfully\", \"success\");\n        });\n      } else {\n        showNotification(\"Không tìm thấy thông tin: \" + taskID, \"danger\");\n      }\n    });\n  }).catch(function (error) {\n    console.log(error);\n    showNotification(\"Error updating task details: \" + error.message, \"danger\");\n  });\n}\n\nfunction getTaskByID(taskId) {\n  Excel.run(function (context) {\n    const sheet = context.workbook.worksheets.getItem(\"WBS\");\n\n    const table = sheet.tables.getItem(\"TblWbs\");\n    const range = table.getDataBodyRange();\n    range.load(\"values\");\n\n    return context.sync().then(function () {\n      const values = range.values;\n      const task = values.find((row) => row[0] === taskId); // Tìm task dựa trên TaskID\n      if (task) {\n        document.querySelector(\"#progressForm #progressTaskID\").value = taskId; // A.StartDate\n        document.querySelector(\"#progressForm #aStartDate\").value = excelDateToJSDate(task[9]); // A.StartDate\n        document.querySelector(\"#progressForm #aEndDate\").value = excelDateToJSDate(task[10]); // A.EndDate\n        document.querySelector(\"#progressForm #aEffort\").value = task[11]; // A.Effort\n        document.querySelector(\"#progressForm #percentACompleted\").value = task[12] * 100; // %A.Completed\n        document.querySelector(\"#progressForm #aReleaseDate\").value = excelDateToJSDate(task[13]); // A.ReleaseDate\n      } else {\n        showNotification(\"không tìm thấy thông tin: \" + taskId, \"danger\");\n      }\n    });\n  }).catch(function (error) {\n    console.log(error);\n  });\n}\n\nfunction initData() {\n  Excel.run(function (context) {\n    var sheet = context.workbook.worksheets.getItem(\"Setting\");\n    var range = sheet.getRange(\"B1:B5\");\n\n    range.load(\"values\");\n    return context.sync().then(function () {\n      var project_code = range.values[0];\n      var project_manager = range.values[1];\n      document.getElementById(\"v_project_code\").innerText = project_code;\n      document.getElementById(\"v_project_manager\").innerText = project_manager;\n    });\n  }).catch(function (error) {\n    console.log(\"Error: \" + error);\n  });\n}\n\nfunction loadAccounts() {\n  Excel.run(function (context) {\n    let sheet = context.workbook.worksheets.getItem(\"Resource\");\n    let table = sheet.tables.getItem(\"TblResource\");\n    let range = table.getRange();\n\n    range.load(\"values\");\n\n    return context.sync().then(function () {\n      let data = range.values; // Lấy toàn bộ giá trị trong bảng\n      let accountSelect = document.getElementById(\"accountSelect\");\n      let headers = data[0];\n      let accountIndex = headers.indexOf(\"Account\");\n      // Lặp qua dữ liệu để thêm vào combobox\n      for (let i = 1; i < data.length; i++) {\n        // Bỏ qua hàng tiêu đề\n        let account = data[i][accountIndex]; // Column Account (index 1)\n        let option = document.createElement(\"option\");\n        option.value = account;\n        option.text = account;\n        accountSelect.appendChild(option);\n      }\n    });\n  }).catch(function (error) {\n    console.log(\"Error: \" + error);\n  });\n}\n\nfunction loadFullname() {\n  let accountSelect = document.getElementById(\"accountSelect\");\n  let selectedAccount = accountSelect.value;\n  let fullnameDisplay = document.getElementById(\"fullnameDisplay\");\n\n  if (selectedAccount) {\n    Excel.run(function (context) {\n      let sheet = context.workbook.worksheets.getItem(\"Resource\");\n      let table = sheet.tables.getItem(\"TblResource\");\n      let range = table.getRange();\n\n      range.load(\"values\");\n\n      return context.sync().then(function () {\n        let data = range.values;\n        let headers = data[0];\n\n        // Tìm fullname tương ứng với account đã chọn\n        for (let i = 1; i < data.length; i++) {\n          // Bỏ qua hàng tiêu đề\n          if (data[i][headers.indexOf(\"Account\")] === selectedAccount) {\n            // Column Account (index 1)\n            fullnameDisplay.innerText = data[i][headers.indexOf(\"Fullname\")]; // Column Fullname (index 2)\n            getTasksByAccount();\n            return;\n          }\n        }\n        fullnameDisplay.innerText = \"\"; // Nếu không tìm thấy, xóa nội dung\n      });\n    }).catch(function (error) {\n      console.log(\"Error: \" + error);\n    });\n  } else {\n    fullnameDisplay.innerText = \"\"; // Nếu không chọn gì, xóa nội dung\n    getTasksByAccount();\n  }\n}\n\nfunction getTasksByAccount() {\n  const accountSelect = document.getElementById(\"accountSelect\");\n  const selectedAccount = accountSelect.value;\n\n  Excel.run(function (context) {\n    const sheet = context.workbook.worksheets.getItem(\"WBS\");\n    const table = sheet.tables.getItem(\"TblWbs\");\n    const range = table.getRange();\n    range.load(\"values\");\n    return context.sync().then(function () {\n      const data = range.values;\n\n      // Nhóm dữ liệu theo trạng thái\n      const groupedTasks = {\n        \"Tổng nhiệm vụ\": [],\n        \"Task đang làm\": [],\n        \"Task chưa làm\": [],\n        \"Task chờ review\": [],\n        \"Task chờ release\": [],\n        \"Task đã release\": [],\n      };\n\n      data.forEach((row) => {\n        const pic = row[3].trim().toLowerCase(); // Đặt chỉ số cột PIC\n        const completed = row[12]; // Đặt chỉ số cột Completed\n        if (pic === selectedAccount.trim().toLowerCase()) {\n          groupedTasks[\"Tổng nhiệm vụ\"].push(row);\n          if (completed > 0 && completed < 0.8) {\n            groupedTasks[\"Task đang làm\"].push(row);\n          } else if (completed === 0) {\n            groupedTasks[\"Task chưa làm\"].push(row);\n          } else if (completed === 0.8) {\n            groupedTasks[\"Task chờ review\"].push(row);\n          } else if (completed === 0.9) {\n            groupedTasks[\"Task chờ release\"].push(row);\n          } else if (completed === 1) {\n            groupedTasks[\"Task đã release\"].push(row);\n          }\n        }\n        if (selectedAccount.trim().toLowerCase() === \"\") {\n          groupedTasks[\"Tổng nhiệm vụ\"].push(row);\n          if (completed > 0 && completed < 0.8) {\n            groupedTasks[\"Task đang làm\"].push(row);\n          } else if (completed === 0) {\n            groupedTasks[\"Task chưa làm\"].push(row);\n          } else if (completed === 0.8) {\n            groupedTasks[\"Task chờ review\"].push(row);\n          } else if (completed === 0.9) {\n            groupedTasks[\"Task chờ release\"].push(row);\n          } else if (completed === 1) {\n            groupedTasks[\"Task đã release\"].push(row);\n          }\n        }\n      });\n      // Hiển thị kết quả ra HTML\n      // Cập nhật hiển thị số lượng và nội dung cho các nhóm tác vụ\n      const totalT = groupedTasks[\"Tổng nhiệm vụ\"].length;\n      const doingCount = groupedTasks[\"Task đang làm\"].length;\n      const notDoneCount = groupedTasks[\"Task chưa làm\"].length;\n      const reviewCount = groupedTasks[\"Task chờ review\"].length;\n      const releaseCount = groupedTasks[\"Task chờ release\"].length;\n      const releasedCount = groupedTasks[\"Task đã release\"].length;\n\n      document.getElementById(\"totalTasksCount\").innerText = totalT;\n      document.getElementById(\"doingCount\").innerText = doingCount;\n      document.getElementById(\"notDoneCount\").innerText = notDoneCount;\n      document.getElementById(\"reviewCount\").innerText = reviewCount;\n      document.getElementById(\"releaseCount\").innerText = releaseCount;\n      document.getElementById(\"releasedCount\").innerText = releasedCount;\n\n      // Progress Bar\n      document.getElementById(\"taskProgressBar\").innerHTML = addProgressBar(\n        totalT,\n        notDoneCount,\n        doingCount,\n        reviewCount,\n        releaseCount,\n        releasedCount\n      );\n      // Cập nhật nội dung cho từng nhóm tác vụ\n      document.getElementById(\"doingTasks\").innerHTML = createTaskTable(groupedTasks[\"Task đang làm\"]);\n      document.getElementById(\"notDoneTasks\").innerHTML = createTaskTable(groupedTasks[\"Task chưa làm\"]);\n      document.getElementById(\"reviewTasks\").innerHTML = createTaskTable(groupedTasks[\"Task chờ review\"]);\n      document.getElementById(\"releaseTasks\").innerHTML = createTaskTable(groupedTasks[\"Task chờ release\"]);\n      document.getElementById(\"releasedTasks\").innerHTML = createTaskTable(groupedTasks[\"Task đã release\"]);\n      // Gán sự kiện cho các thẻ <a> mới được thêm vào\n      addModalEventListeners();\n    });\n  }).catch(function (error) {\n    console.error(\"Error retrieving tasks:\", error);\n  });\n}\nfunction addProgressBar(total, notStarted, inProgress, waitForReview, waitForRelease, released) {\n  let progressBarHTML = `\n      <div class='progress-bar progress-bar-striped bg-danger'\n           role='progressbar'\n           style='width: ${(notStarted / total) * 100}%'\n           aria-valuenow='${(notStarted / total) * 100}'\n           aria-valuemin='0'\n           aria-valuemax='100'>\n          ${((notStarted / total) * 100).toFixed(2)}%\n      </div>\n`;\n\n  progressBarHTML += `\n      <div class='progress-bar progress-bar-striped bg-warning'\n           role='progressbar'\n           style='width: ${(inProgress / total) * 100}%'\n           aria-valuenow='${(inProgress / total) * 100}'\n           aria-valuemin='0'\n           aria-valuemax='100'>\n          ${((inProgress / total) * 100).toFixed(2)}%\n      </div>\n`;\n\n  progressBarHTML += `\n<div class='progress-bar progress-bar-striped bg-warning'\n     role='progressbar'\n     style='width: ${(waitForReview / total) * 100}%'\n     aria-valuenow='${(waitForReview / total) * 100}'\n     aria-valuemin='0'\n     aria-valuemax='100'>\n    ${((waitForReview / total) * 100).toFixed(2)}%\n</div>\n`;\n\n  progressBarHTML += `\n<div class='progress-bar progress-bar-striped bg-warning'\n     role='progressbar'\n     style='width: ${(waitForRelease / total) * 100}%'\n     aria-valuenow='${(waitForRelease / total) * 100}'\n     aria-valuemin='0'\n     aria-valuemax='100'>\n    ${((waitForRelease / total) * 100).toFixed(2)}%\n</div>\n`;\n\n  progressBarHTML += `\n<div class='progress-bar progress-bar-striped bg-success'\n     role='progressbar'\n     style='width: ${(released / total) * 100}%'\n     aria-valuenow='${(released / total) * 100}'\n     aria-valuemin='0'\n     aria-valuemax='100'>\n    ${((released / total) * 100).toFixed(2)}%\n</div>\n`;\n\n  return progressBarHTML;\n}\n\n// Hàm để tạo bảng từ dữ liệu tác vụ\nfunction createTaskTable(tasks, logworkFlg) {\n  if (tasks.length === 0) {\n    return \"<p>No tasks available.</p>\";\n  }\n\n  // Bắt đầu tạo bảng\n  let table = \"<table class='table table-bordered'>\";\n  table += \"<thead><tr>\";\n  table += \"<th>TaskID</th><th>P.StartDate</th><th>P.EndDate</th><th>P.Effort</th>\";\n  table += \"<th>A.StartDate</th><th>A.EndDate</th><th>A.Effort</th><th>%A.Completed</th>\";\n\n  // Thêm cột mới cho button nếu logworkFlg là true\n  if (logworkFlg) {\n    table += \"<th>Action</th>\";\n  }\n\n  table += \"</tr></thead><tbody>\";\n\n  // Thêm từng hàng vào bảng\n  tasks.forEach((task) => {\n    table += \"<tr>\";\n    table += `<td><a href=\"#\" class=\"openModal link-info\" data-taskid=\"${task[0]}\">${task[0]}</a></td>`; // TaskID với sự kiện click\n    table += `<td>${excelDateToJSDate(task[5])}</td>`; // P.StartDate\n    table += `<td>${excelDateToJSDate(task[6])}</td>`; // P.EndDate\n    table += `<td>${task[8]}</td>`; // P.Effort\n    table += `<td>${excelDateToJSDate(task[9])}</td>`; // A.StartDate\n    table += `<td>${excelDateToJSDate(task[10])}</td>`; // A.EndDate\n    table += `<td>${task[11]}</td>`; // A.Effort\n    table += `<td>${task[12] * 100}%</td>`; // A.Completed\n\n    // Thêm button logwork nếu logworkFlg là true\n    if (logworkFlg) {\n      table += `<td><button class=\"btn btn-primary btn-sm open-logwork-modal\" data-taskid=\"${task[0]}\">Logwork</button></td>`;\n    }\n\n    table += \"</tr>\";\n  });\n\n  table += \"</tbody></table>\";\n  return table;\n}\n\nfunction addModalEventListeners() {\n  // Add event listeners for update progress modal\n  document.querySelectorAll(\".openModal\").forEach((link) => {\n    link.addEventListener(\"click\", function (event) {\n      event.preventDefault();\n      const taskId = this.getAttribute(\"data-taskid\");\n      document.getElementById(\"progressTaskID\").value = taskId; // Set TaskID in modal\n      getTaskByID(taskId);\n\n      // eslint-disable-next-line no-undef\n      let myModal = new bootstrap.Modal(document.getElementById(\"updateProgressModal\"));\n      myModal.show();\n    });\n  });\n\n  // Add event listeners for logwork modal\n  // document.querySelectorAll(\".open-logwork-modal\").forEach((button) => {\n  //   button.addEventListener(\"click\", function (event) {\n  //     event.preventDefault();\n  //     const taskId = this.getAttribute(\"data-taskid\");\n  //     document.getElementById(\"taskId\").value = taskId; // Set TaskID in modal\n  //     getTaskByID(taskId);\n\n  //     // eslint-disable-next-line no-undef\n  //     let myModal = new bootstrap.Modal(document.getElementById(\"logworkModal\"));\n  //     myModal.show();\n  //   });\n  // });\n}\n"],"names":["jsDateToExcelDate","dateString","date","Date","getTime","getTimezoneOffset","excelDateToJSDate","excelDate","isNaN","toISOString","split","showNotification","message","type","notificationEl","document","getElementById","textContent","className","concat","classList","remove","setTimeout","add","getTaskByID","taskId","Excel","run","context","range","workbook","worksheets","getItem","tables","getDataBodyRange","load","sync","then","task","values","find","row","querySelector","value","catch","error","console","log","loadFullname","selectedAccount","fullnameDisplay","getRange","data","headers","i","length","indexOf","innerText","getTasksByAccount","groupedTasks","forEach","pic","trim","toLowerCase","completed","push","total","notStarted","inProgress","waitForReview","waitForRelease","released","progressBarHTML","totalT","doingCount","notDoneCount","reviewCount","releaseCount","releasedCount","innerHTML","toFixed","createTaskTable","querySelectorAll","link","addEventListener","event","preventDefault","this","getAttribute","bootstrap","Modal","show","tasks","logworkFlg","table","Office","onReady","info","host","HostType","accountSelect","accountIndex","account","option","createElement","text","appendChild","onchange","taskData","startDate","endDate","effort","percentCompleted","releaseDate","taskID","taskIndex","findIndex","updatedRow","getRow","updateTaskDetails","myModalElement","myModal","getInstance","hide","today","dateInput","warn"],"sourceRoot":""}